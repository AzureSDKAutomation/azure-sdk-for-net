// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// LinkedWorkspacesOperations operations.
    /// </summary>
    public partial interface ILinkedWorkspacesOperations
    {
        /// <summary>
        /// List linked workspaces under a workspace per some query criteria.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// Name of the resource group in which workspace is located.
        /// </param>
        /// <param name='workspaceName'>
        /// Name of Azure Machine Learning workspace.
        /// </param>
        /// <param name='linkSubscriptionId'>
        /// The subscriptionid of the linked workspace.
        /// </param>
        /// <param name='linkResourceGroup'>
        /// The resource group name of the linked workspace.
        /// </param>
        /// <param name='linkResourceName'>
        /// The resource name of the linked workspace.
        /// </param>
        /// <param name='linkResourceId'>
        /// The resourceId of the linked workspace.
        /// </param>
        /// <param name='linkType'>
        /// The type of the linked workspace. Possible values include:
        /// 'Synapse'
        /// </param>
        /// <param name='uaiResourceId'>
        /// The resourceId of the user assigned identity for the linked
        /// workspace.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="MachineLearningServiceErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IList<LinkedWorkspace>>> ListWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string linkSubscriptionId = default(string), string linkResourceGroup = default(string), string linkResourceName = default(string), string linkResourceId = default(string), string linkType = default(string), string uaiResourceId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Add a new linked workspace.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// Name of the resource group in which workspace is located.
        /// </param>
        /// <param name='workspaceName'>
        /// Name of Azure Machine Learning workspace.
        /// </param>
        /// <param name='parameters'>
        /// The object for adding a new linked workspace
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="MachineLearningServiceErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<LinkedWorkspace>> CreateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, LinkedWorkspaceCreateDto parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the detail of a linked workspace.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// Name of the resource group in which workspace is located.
        /// </param>
        /// <param name='workspaceName'>
        /// Name of Azure Machine Learning workspace.
        /// </param>
        /// <param name='linkName'>
        /// Friendly name of the linked workspace
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="MachineLearningServiceErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<LinkedWorkspace>> GetWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string linkName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update the detail of a linked workspace.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// Name of the resource group in which workspace is located.
        /// </param>
        /// <param name='workspaceName'>
        /// Name of Azure Machine Learning workspace.
        /// </param>
        /// <param name='linkName'>
        /// Friendly name of the linked workspace
        /// </param>
        /// <param name='parameters'>
        /// The object for updating an existing linked workspace
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="MachineLearningServiceErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<LinkedWorkspace>> UpdateWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string linkName, LinkedWorkspaceUpdateDto parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Delete a linked workspace.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// Name of the resource group in which workspace is located.
        /// </param>
        /// <param name='workspaceName'>
        /// Name of Azure Machine Learning workspace.
        /// </param>
        /// <param name='linkName'>
        /// Friendly name of the linked workspace
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="MachineLearningServiceErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string workspaceName, string linkName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
