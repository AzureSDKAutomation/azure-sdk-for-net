// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// LinkedService specific properties.
    /// </summary>
    public partial class LinkedServiceProps
    {
        /// <summary>
        /// Initializes a new instance of the LinkedServiceProps class.
        /// </summary>
        public LinkedServiceProps()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LinkedServiceProps class.
        /// </summary>
        /// <param name="linkedServiceResourceId">ResourceId of the link target
        /// of the linked service.</param>
        /// <param name="linkType">Type of the link target. Possible values
        /// include: 'Synapse'</param>
        /// <param name="createdTime">The creation time of the linked
        /// service.</param>
        /// <param name="modifiedTime">The last modified time of the linked
        /// service.</param>
        public LinkedServiceProps(string linkedServiceResourceId, LinkedServiceLinkType? linkType = default(LinkedServiceLinkType?), System.DateTime? createdTime = default(System.DateTime?), System.DateTime? modifiedTime = default(System.DateTime?))
        {
            LinkedServiceResourceId = linkedServiceResourceId;
            LinkType = linkType;
            CreatedTime = createdTime;
            ModifiedTime = modifiedTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets resourceId of the link target of the linked service.
        /// </summary>
        [JsonProperty(PropertyName = "linkedServiceResourceId")]
        public string LinkedServiceResourceId { get; set; }

        /// <summary>
        /// Gets or sets type of the link target. Possible values include:
        /// 'Synapse'
        /// </summary>
        [JsonProperty(PropertyName = "linkType")]
        public LinkedServiceLinkType? LinkType { get; set; }

        /// <summary>
        /// Gets or sets the creation time of the linked service.
        /// </summary>
        [JsonProperty(PropertyName = "createdTime")]
        public System.DateTime? CreatedTime { get; set; }

        /// <summary>
        /// Gets or sets the last modified time of the linked service.
        /// </summary>
        [JsonProperty(PropertyName = "modifiedTime")]
        public System.DateTime? ModifiedTime { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (LinkedServiceResourceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "LinkedServiceResourceId");
            }
        }
    }
}
