// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class DatastoreContents
    {
        /// <summary>
        /// Initializes a new instance of the DatastoreContents class.
        /// </summary>
        public DatastoreContents()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatastoreContents class.
        /// </summary>
        /// <param name="datastoreContentsType">Storage type backing the
        /// datastore. Possible values include: 'AzureBlob', 'AzureDataLake',
        /// 'AzureDataLakeGen2', 'AzureFile', 'AzureMySql', 'AzurePostgreSql',
        /// 'AzureSqlDatabase', 'GlusterFs'</param>
        /// <param name="azureDataLake">Azure Data Lake (Gen1/2) storage
        /// information.</param>
        /// <param name="azureMySql">Azure Database for MySQL
        /// information.</param>
        /// <param name="azurePostgreSql">Azure Database for PostgreSQL
        /// information.</param>
        /// <param name="azureSqlDatabase">Azure SQL Database
        /// information.</param>
        /// <param name="azureStorage">Azure storage account (blobs, files)
        /// information.</param>
        /// <param name="glusterFs">GlusterFS volume information.</param>
        public DatastoreContents(string datastoreContentsType, AzureDataLakeSection azureDataLake = default(AzureDataLakeSection), AzureMySqlSection azureMySql = default(AzureMySqlSection), AzurePostgreSqlSection azurePostgreSql = default(AzurePostgreSqlSection), AzureSqlDatabaseSection azureSqlDatabase = default(AzureSqlDatabaseSection), AzureStorageSection azureStorage = default(AzureStorageSection), GlusterFsSection glusterFs = default(GlusterFsSection))
        {
            DatastoreContentsType = datastoreContentsType;
            AzureDataLake = azureDataLake;
            AzureMySql = azureMySql;
            AzurePostgreSql = azurePostgreSql;
            AzureSqlDatabase = azureSqlDatabase;
            AzureStorage = azureStorage;
            GlusterFs = glusterFs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets storage type backing the datastore. Possible values
        /// include: 'AzureBlob', 'AzureDataLake', 'AzureDataLakeGen2',
        /// 'AzureFile', 'AzureMySql', 'AzurePostgreSql', 'AzureSqlDatabase',
        /// 'GlusterFs'
        /// </summary>
        [JsonProperty(PropertyName = "datastoreContentsType")]
        public string DatastoreContentsType { get; set; }

        /// <summary>
        /// Gets or sets azure Data Lake (Gen1/2) storage information.
        /// </summary>
        [JsonProperty(PropertyName = "azureDataLake")]
        public AzureDataLakeSection AzureDataLake { get; set; }

        /// <summary>
        /// Gets or sets azure Database for MySQL information.
        /// </summary>
        [JsonProperty(PropertyName = "azureMySql")]
        public AzureMySqlSection AzureMySql { get; set; }

        /// <summary>
        /// Gets or sets azure Database for PostgreSQL information.
        /// </summary>
        [JsonProperty(PropertyName = "azurePostgreSql")]
        public AzurePostgreSqlSection AzurePostgreSql { get; set; }

        /// <summary>
        /// Gets or sets azure SQL Database information.
        /// </summary>
        [JsonProperty(PropertyName = "azureSqlDatabase")]
        public AzureSqlDatabaseSection AzureSqlDatabase { get; set; }

        /// <summary>
        /// Gets or sets azure storage account (blobs, files) information.
        /// </summary>
        [JsonProperty(PropertyName = "azureStorage")]
        public AzureStorageSection AzureStorage { get; set; }

        /// <summary>
        /// Gets or sets glusterFS volume information.
        /// </summary>
        [JsonProperty(PropertyName = "glusterFs")]
        public GlusterFsSection GlusterFs { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DatastoreContentsType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DatastoreContentsType");
            }
            if (AzureDataLake != null)
            {
                AzureDataLake.Validate();
            }
            if (AzureMySql != null)
            {
                AzureMySql.Validate();
            }
            if (AzurePostgreSql != null)
            {
                AzurePostgreSql.Validate();
            }
            if (AzureSqlDatabase != null)
            {
                AzureSqlDatabase.Validate();
            }
            if (AzureStorage != null)
            {
                AzureStorage.Validate();
            }
            if (GlusterFs != null)
            {
                GlusterFs.Validate();
            }
        }
    }
}
