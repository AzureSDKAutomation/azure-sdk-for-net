// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties of a diagnose request
    /// </summary>
    public partial class DiagnoseRequestProperties
    {
        /// <summary>
        /// Initializes a new instance of the DiagnoseRequestProperties class.
        /// </summary>
        public DiagnoseRequestProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DiagnoseRequestProperties class.
        /// </summary>
        /// <param name="udr">Setting for diagnosing user defined
        /// routing</param>
        /// <param name="nsg">Setting for diagnosing network security
        /// group</param>
        /// <param name="resourceLock">Setting for diagnosing resource
        /// lock</param>
        /// <param name="dnsResolution">Setting for diagnosing dns
        /// resolution</param>
        /// <param name="storageAccount">Setting for diagnosing dependent
        /// storage account</param>
        /// <param name="keyVault">Setting for diagnosing dependent key
        /// vault</param>
        /// <param name="containerRegistry">Setting for diagnosing dependent
        /// container registry</param>
        /// <param name="others">Setting for diagnosing unclassified category
        /// of problems</param>
        public DiagnoseRequestProperties(object udr = default(object), object nsg = default(object), object resourceLock = default(object), object dnsResolution = default(object), object storageAccount = default(object), object keyVault = default(object), object containerRegistry = default(object), object others = default(object))
        {
            Udr = udr;
            Nsg = nsg;
            ResourceLock = resourceLock;
            DnsResolution = dnsResolution;
            StorageAccount = storageAccount;
            KeyVault = keyVault;
            ContainerRegistry = containerRegistry;
            Others = others;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets setting for diagnosing user defined routing
        /// </summary>
        [JsonProperty(PropertyName = "udr")]
        public object Udr { get; set; }

        /// <summary>
        /// Gets or sets setting for diagnosing network security group
        /// </summary>
        [JsonProperty(PropertyName = "nsg")]
        public object Nsg { get; set; }

        /// <summary>
        /// Gets or sets setting for diagnosing resource lock
        /// </summary>
        [JsonProperty(PropertyName = "resourceLock")]
        public object ResourceLock { get; set; }

        /// <summary>
        /// Gets or sets setting for diagnosing dns resolution
        /// </summary>
        [JsonProperty(PropertyName = "dnsResolution")]
        public object DnsResolution { get; set; }

        /// <summary>
        /// Gets or sets setting for diagnosing dependent storage account
        /// </summary>
        [JsonProperty(PropertyName = "storageAccount")]
        public object StorageAccount { get; set; }

        /// <summary>
        /// Gets or sets setting for diagnosing dependent key vault
        /// </summary>
        [JsonProperty(PropertyName = "keyVault")]
        public object KeyVault { get; set; }

        /// <summary>
        /// Gets or sets setting for diagnosing dependent container registry
        /// </summary>
        [JsonProperty(PropertyName = "containerRegistry")]
        public object ContainerRegistry { get; set; }

        /// <summary>
        /// Gets or sets setting for diagnosing unclassified category of
        /// problems
        /// </summary>
        [JsonProperty(PropertyName = "others")]
        public object Others { get; set; }

    }
}
