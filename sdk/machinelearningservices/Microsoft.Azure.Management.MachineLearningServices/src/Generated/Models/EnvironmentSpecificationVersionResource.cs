// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Azure Resource Manager resource envelope.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class EnvironmentSpecificationVersionResource : IResource
    {
        /// <summary>
        /// Initializes a new instance of the
        /// EnvironmentSpecificationVersionResource class.
        /// </summary>
        public EnvironmentSpecificationVersionResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// EnvironmentSpecificationVersionResource class.
        /// </summary>
        /// <param name="id">The resource URL of the entity (not URL
        /// encoded).</param>
        /// <param name="name">The name of the resource entity.</param>
        /// <param name="type">The resource provider and type.</param>
        /// <param name="environmentSpecificationType">Environment
        /// specification is either user managed or curated by the Azure ML
        /// service
        /// &lt;see
        /// href="https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments"
        /// /&gt;. Possible values include: 'Curated', 'UserCreated'</param>
        /// <param name="condaFile">Standard configuration file used by conda
        /// that lets you install any kind of package, including Python, R, and
        /// C/C++ packages
        /// &lt;see
        /// href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment"
        /// /&gt;</param>
        /// <param name="inferenceContainerProperties">Defines configuration
        /// specific to inference.</param>
        /// <param name="generatedBy">If the name version are system generated
        /// (anonymous registration) or user generated. Possible values
        /// include: 'User', 'System'</param>
        /// <param name="description">The asset description text.</param>
        /// <param name="tags">Tag dictionary. Tags can be added, removed, and
        /// updated.</param>
        /// <param name="properties">The asset property dictionary.</param>
        /// <param name="systemData">System data associated with resource
        /// provider</param>
        public EnvironmentSpecificationVersionResource(string id = default(string), string name = default(string), string type = default(string), string environmentSpecificationType = default(string), DockerSpecification docker = default(DockerSpecification), string condaFile = default(string), InferenceContainerProperties inferenceContainerProperties = default(InferenceContainerProperties), string generatedBy = default(string), string description = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), IDictionary<string, string> properties = default(IDictionary<string, string>), SystemData systemData = default(SystemData))
        {
            Id = id;
            Name = name;
            Type = type;
            EnvironmentSpecificationType = environmentSpecificationType;
            Docker = docker;
            CondaFile = condaFile;
            InferenceContainerProperties = inferenceContainerProperties;
            GeneratedBy = generatedBy;
            Description = description;
            Tags = tags;
            Properties = properties;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the resource URL of the entity (not URL encoded).
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets the name of the resource entity.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the resource provider and type.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets environment specification is either user managed or curated by
        /// the Azure ML service
        /// &amp;lt;see
        /// href="https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments"
        /// /&amp;gt;. Possible values include: 'Curated', 'UserCreated'
        /// </summary>
        [JsonProperty(PropertyName = "properties.environmentSpecificationType")]
        public string EnvironmentSpecificationType { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.docker")]
        public DockerSpecification Docker { get; set; }

        /// <summary>
        /// Gets or sets standard configuration file used by conda that lets
        /// you install any kind of package, including Python, R, and C/C++
        /// packages
        /// &amp;lt;see
        /// href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment"
        /// /&amp;gt;
        /// </summary>
        [JsonProperty(PropertyName = "properties.condaFile")]
        public string CondaFile { get; set; }

        /// <summary>
        /// Gets or sets defines configuration specific to inference.
        /// </summary>
        [JsonProperty(PropertyName = "properties.inferenceContainerProperties")]
        public InferenceContainerProperties InferenceContainerProperties { get; set; }

        /// <summary>
        /// Gets or sets if the name version are system generated (anonymous
        /// registration) or user generated. Possible values include: 'User',
        /// 'System'
        /// </summary>
        [JsonProperty(PropertyName = "properties.generatedBy")]
        public string GeneratedBy { get; set; }

        /// <summary>
        /// Gets or sets the asset description text.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets tag dictionary. Tags can be added, removed, and
        /// updated.
        /// </summary>
        [JsonProperty(PropertyName = "properties.tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets the asset property dictionary.
        /// </summary>
        [JsonProperty(PropertyName = "properties.properties")]
        public IDictionary<string, string> Properties { get; set; }

        /// <summary>
        /// Gets system data associated with resource provider
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (InferenceContainerProperties != null)
            {
                InferenceContainerProperties.Validate();
            }
        }
    }
}
