// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class OutputData
    {
        /// <summary>
        /// Initializes a new instance of the OutputData class.
        /// </summary>
        public OutputData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OutputData class.
        /// </summary>
        /// <param name="datasetName">Output dataset name.</param>
        /// <param name="datastore">Datastore location for output data.</param>
        /// <param name="datapath">Path location within the datastore for
        /// output data.</param>
        /// <param name="mode">Mode type for data. Possible values include:
        /// 'Mount', 'Download', 'Upload'</param>
        public OutputData(string datasetName = default(string), string datastore = default(string), string datapath = default(string), string mode = default(string))
        {
            DatasetName = datasetName;
            Datastore = datastore;
            Datapath = datapath;
            Mode = mode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets output dataset name.
        /// </summary>
        [JsonProperty(PropertyName = "datasetName")]
        public string DatasetName { get; set; }

        /// <summary>
        /// Gets or sets datastore location for output data.
        /// </summary>
        [JsonProperty(PropertyName = "datastore")]
        public string Datastore { get; set; }

        /// <summary>
        /// Gets or sets path location within the datastore for output data.
        /// </summary>
        [JsonProperty(PropertyName = "datapath")]
        public string Datapath { get; set; }

        /// <summary>
        /// Gets or sets mode type for data. Possible values include: 'Mount',
        /// 'Download', 'Upload'
        /// </summary>
        [JsonProperty(PropertyName = "mode")]
        public string Mode { get; set; }

    }
}
