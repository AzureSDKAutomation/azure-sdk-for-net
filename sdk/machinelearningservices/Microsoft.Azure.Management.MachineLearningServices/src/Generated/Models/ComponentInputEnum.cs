// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    [Newtonsoft.Json.JsonObject("Enum")]
    public partial class ComponentInputEnum : ComponentInput
    {
        /// <summary>
        /// Initializes a new instance of the ComponentInputEnum class.
        /// </summary>
        public ComponentInputEnum()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ComponentInputEnum class.
        /// </summary>
        /// <param name="dataType">Component input type. String is used for
        /// type extensibility.</param>
        /// <param name="optional">If the input is optional. Defaults to
        /// false/required.</param>
        /// <param name="description">Description for input.</param>
        /// <param name="defaultProperty">Default value for an input. Must
        /// match the given type.</param>
        /// <param name="enumProperty">The enum definition list for enum types,
        /// used to validate the inputs for type enum.</param>
        public ComponentInputEnum(string dataType, bool? optional = default(bool?), string description = default(string), string defaultProperty = default(string), IList<string> enumProperty = default(IList<string>))
            : base(dataType, optional, description, defaultProperty)
        {
            EnumProperty = enumProperty;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the enum definition list for enum types, used to
        /// validate the inputs for type enum.
        /// </summary>
        [JsonProperty(PropertyName = "enum")]
        public IList<string> EnumProperty { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
