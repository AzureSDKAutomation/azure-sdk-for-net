// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Pipeline
    {
        /// <summary>
        /// Initializes a new instance of the Pipeline class.
        /// </summary>
        public Pipeline()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Pipeline class.
        /// </summary>
        /// <param name="continueRunOnStepFailure">Flag when set, continue
        /// pipeline execution if a step fails.</param>
        /// <param name="defaultDatastoreName">Default datastore name shared by
        /// all pipeline jobs.</param>
        /// <param name="componentJobs">JobDefinition set for
        /// PipelineStepJobs.</param>
        /// <param name="inputs">Data input set for jobs.</param>
        /// <param name="outputs">Data output set for jobs.</param>
        public Pipeline(bool? continueRunOnStepFailure = default(bool?), string defaultDatastoreName = default(string), IDictionary<string, ComponentJob> componentJobs = default(IDictionary<string, ComponentJob>), IDictionary<string, PipelineInput> inputs = default(IDictionary<string, PipelineInput>), IDictionary<string, PipelineOutput> outputs = default(IDictionary<string, PipelineOutput>))
        {
            ContinueRunOnStepFailure = continueRunOnStepFailure;
            DefaultDatastoreName = defaultDatastoreName;
            ComponentJobs = componentJobs;
            Inputs = inputs;
            Outputs = outputs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets flag when set, continue pipeline execution if a step
        /// fails.
        /// </summary>
        [JsonProperty(PropertyName = "continueRunOnStepFailure")]
        public bool? ContinueRunOnStepFailure { get; set; }

        /// <summary>
        /// Gets or sets default datastore name shared by all pipeline jobs.
        /// </summary>
        [JsonProperty(PropertyName = "defaultDatastoreName")]
        public string DefaultDatastoreName { get; set; }

        /// <summary>
        /// Gets or sets jobDefinition set for PipelineStepJobs.
        /// </summary>
        [JsonProperty(PropertyName = "componentJobs")]
        public IDictionary<string, ComponentJob> ComponentJobs { get; set; }

        /// <summary>
        /// Gets or sets data input set for jobs.
        /// </summary>
        [JsonProperty(PropertyName = "inputs")]
        public IDictionary<string, PipelineInput> Inputs { get; set; }

        /// <summary>
        /// Gets or sets data output set for jobs.
        /// </summary>
        [JsonProperty(PropertyName = "outputs")]
        public IDictionary<string, PipelineOutput> Outputs { get; set; }

    }
}
