// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Component
    {
        /// <summary>
        /// Initializes a new instance of the Component class.
        /// </summary>
        public Component()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Component class.
        /// </summary>
        /// <param name="componentType">Component Type, should match the
        /// schema. Possible values include: 'CommandComponent'</param>
        /// <param name="displayName">DisplayName of the component on the UI.
        /// Defaults to same as name.</param>
        /// <param name="isDeterministic">Whether or not its deterministic.
        /// Defaults to true.</param>
        /// <param name="inputs">Defines input ports of the component. The
        /// string key is the name of input, which should be a valid Python
        /// variable name.</param>
        /// <param name="outputs">Defines output ports of the component. The
        /// string key is the name of Output, which should be a valid Python
        /// variable name.</param>
        public Component(string componentType = default(string), string displayName = default(string), bool? isDeterministic = default(bool?), IDictionary<string, ComponentInput> inputs = default(IDictionary<string, ComponentInput>), IDictionary<string, ComponentOutput> outputs = default(IDictionary<string, ComponentOutput>))
        {
            ComponentType = componentType;
            DisplayName = displayName;
            IsDeterministic = isDeterministic;
            Inputs = inputs;
            Outputs = outputs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets component Type, should match the schema. Possible
        /// values include: 'CommandComponent'
        /// </summary>
        [JsonProperty(PropertyName = "componentType")]
        public string ComponentType { get; set; }

        /// <summary>
        /// Gets or sets displayName of the component on the UI. Defaults to
        /// same as name.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets whether or not its deterministic. Defaults to true.
        /// </summary>
        [JsonProperty(PropertyName = "isDeterministic")]
        public bool? IsDeterministic { get; set; }

        /// <summary>
        /// Gets or sets defines input ports of the component. The string key
        /// is the name of input, which should be a valid Python variable name.
        /// </summary>
        [JsonProperty(PropertyName = "inputs")]
        public IDictionary<string, ComponentInput> Inputs { get; set; }

        /// <summary>
        /// Gets or sets defines output ports of the component. The string key
        /// is the name of Output, which should be a valid Python variable
        /// name.
        /// </summary>
        [JsonProperty(PropertyName = "outputs")]
        public IDictionary<string, ComponentOutput> Outputs { get; set; }

    }
}
