// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Azure Resource Manager resource envelope.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class LabelingJobResource : IResource
    {
        /// <summary>
        /// Initializes a new instance of the LabelingJobResource class.
        /// </summary>
        public LabelingJobResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LabelingJobResource class.
        /// </summary>
        /// <param name="id">The resource URL of the entity (not URL
        /// encoded).</param>
        /// <param name="name">The name of the resource entity.</param>
        /// <param name="type">The resource provider and type.</param>
        /// <param name="provisioningState">Possible values include:
        /// 'Succeeded', 'Failed', 'Canceled', 'InProgress'</param>
        /// <param name="interactionEndpoints">Dictionary of endpoint URIs,
        /// keyed by enumerated job endpoints.
        /// For local jobs, a job endpoint will have a value of
        /// FileStreamObject.</param>
        /// <param name="description">The asset description text.</param>
        /// <param name="tags">Tag dictionary. Tags can be added, removed, and
        /// updated.</param>
        /// <param name="properties">The asset property dictionary.</param>
        /// <param name="labelCategories">Label categories of the job.</param>
        /// <param name="jobInstructions">Labeling instructions of the
        /// job.</param>
        /// <param name="datasetConfiguration">Configuration of dataset used in
        /// the job.</param>
        /// <param name="mlAssistConfiguration">Configuration of MLAssist
        /// feature in the job.</param>
        /// <param name="projectId">Internal id of the job(Previously called
        /// project).</param>
        /// <param name="status">Status of the job. Possible values include:
        /// 'NotStarted', 'Starting', 'Provisioning', 'Preparing', 'Queued',
        /// 'Running', 'Finalizing', 'CancelRequested', 'Completed', 'Failed',
        /// 'Canceled', 'NotResponding', 'Paused'</param>
        /// <param name="progressMetrics">Progress metrics of the job.</param>
        /// <param name="statusMessages">Status messages of the job.</param>
        /// <param name="systemData">System data associated with resource
        /// provider</param>
        public LabelingJobResource(string id = default(string), string name = default(string), string type = default(string), string provisioningState = default(string), JobBaseInteractionEndpoints interactionEndpoints = default(JobBaseInteractionEndpoints), string description = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), IDictionary<string, string> properties = default(IDictionary<string, string>), IDictionary<string, LabelCategory> labelCategories = default(IDictionary<string, LabelCategory>), LabelingJobInstructions jobInstructions = default(LabelingJobInstructions), LabelingDatasetConfiguration datasetConfiguration = default(LabelingDatasetConfiguration), MLAssistConfiguration mlAssistConfiguration = default(MLAssistConfiguration), LabelingJobMediaProperties labelingJobMediaProperties = default(LabelingJobMediaProperties), System.Guid? projectId = default(System.Guid?), string status = default(string), ProgressMetrics progressMetrics = default(ProgressMetrics), IList<StatusMessage> statusMessages = default(IList<StatusMessage>), SystemData systemData = default(SystemData))
        {
            Id = id;
            Name = name;
            Type = type;
            ProvisioningState = provisioningState;
            InteractionEndpoints = interactionEndpoints;
            Description = description;
            Tags = tags;
            Properties = properties;
            LabelCategories = labelCategories;
            JobInstructions = jobInstructions;
            DatasetConfiguration = datasetConfiguration;
            MlAssistConfiguration = mlAssistConfiguration;
            LabelingJobMediaProperties = labelingJobMediaProperties;
            ProjectId = projectId;
            Status = status;
            ProgressMetrics = progressMetrics;
            StatusMessages = statusMessages;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the resource URL of the entity (not URL encoded).
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets the name of the resource entity.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the resource provider and type.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Succeeded', 'Failed', 'Canceled',
        /// 'InProgress'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets dictionary of endpoint URIs, keyed by enumerated job
        /// endpoints.
        /// For local jobs, a job endpoint will have a value of
        /// FileStreamObject.
        /// </summary>
        [JsonProperty(PropertyName = "properties.interactionEndpoints")]
        public JobBaseInteractionEndpoints InteractionEndpoints { get; private set; }

        /// <summary>
        /// Gets or sets the asset description text.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets tag dictionary. Tags can be added, removed, and
        /// updated.
        /// </summary>
        [JsonProperty(PropertyName = "properties.tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets the asset property dictionary.
        /// </summary>
        [JsonProperty(PropertyName = "properties.properties")]
        public IDictionary<string, string> Properties { get; set; }

        /// <summary>
        /// Gets or sets label categories of the job.
        /// </summary>
        [JsonProperty(PropertyName = "properties.labelCategories")]
        public IDictionary<string, LabelCategory> LabelCategories { get; set; }

        /// <summary>
        /// Gets or sets labeling instructions of the job.
        /// </summary>
        [JsonProperty(PropertyName = "properties.jobInstructions")]
        public LabelingJobInstructions JobInstructions { get; set; }

        /// <summary>
        /// Gets or sets configuration of dataset used in the job.
        /// </summary>
        [JsonProperty(PropertyName = "properties.datasetConfiguration")]
        public LabelingDatasetConfiguration DatasetConfiguration { get; set; }

        /// <summary>
        /// Gets or sets configuration of MLAssist feature in the job.
        /// </summary>
        [JsonProperty(PropertyName = "properties.mlAssistConfiguration")]
        public MLAssistConfiguration MlAssistConfiguration { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.labelingJobMediaProperties")]
        public LabelingJobMediaProperties LabelingJobMediaProperties { get; set; }

        /// <summary>
        /// Gets internal id of the job(Previously called project).
        /// </summary>
        [JsonProperty(PropertyName = "properties.projectId")]
        public System.Guid? ProjectId { get; private set; }

        /// <summary>
        /// Gets status of the job. Possible values include: 'NotStarted',
        /// 'Starting', 'Provisioning', 'Preparing', 'Queued', 'Running',
        /// 'Finalizing', 'CancelRequested', 'Completed', 'Failed', 'Canceled',
        /// 'NotResponding', 'Paused'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets progress metrics of the job.
        /// </summary>
        [JsonProperty(PropertyName = "properties.progressMetrics")]
        public ProgressMetrics ProgressMetrics { get; private set; }

        /// <summary>
        /// Gets status messages of the job.
        /// </summary>
        [JsonProperty(PropertyName = "properties.statusMessages")]
        public IList<StatusMessage> StatusMessages { get; private set; }

        /// <summary>
        /// Gets system data associated with resource provider
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

    }
}
