// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Value of DiagnoseResponse
    /// </summary>
    public partial class DiagnoseResponseResultValue
    {
        /// <summary>
        /// Initializes a new instance of the DiagnoseResponseResultValue
        /// class.
        /// </summary>
        public DiagnoseResponseResultValue()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DiagnoseResponseResultValue
        /// class.
        /// </summary>
        /// <param name="uDR">UDR value</param>
        /// <param name="nSG">NSG value</param>
        /// <param name="resourceLock">Resource Lock</param>
        /// <param name="dNSResolution">DNS Resolution</param>
        /// <param name="storageAccount">Storage Account</param>
        /// <param name="keyVault">The KeyVault</param>
        /// <param name="containerRegistry">Container Registry</param>
        /// <param name="others">Other items</param>
        public DiagnoseResponseResultValue(IList<DiagnoseResult> uDR = default(IList<DiagnoseResult>), IList<DiagnoseResult> nSG = default(IList<DiagnoseResult>), IList<DiagnoseResult> resourceLock = default(IList<DiagnoseResult>), IList<DiagnoseResult> dNSResolution = default(IList<DiagnoseResult>), IList<DiagnoseResult> storageAccount = default(IList<DiagnoseResult>), IList<DiagnoseResult> keyVault = default(IList<DiagnoseResult>), IList<DiagnoseResult> containerRegistry = default(IList<DiagnoseResult>), IList<DiagnoseResult> others = default(IList<DiagnoseResult>))
        {
            UDR = uDR;
            NSG = nSG;
            ResourceLock = resourceLock;
            DNSResolution = dNSResolution;
            StorageAccount = storageAccount;
            KeyVault = keyVault;
            ContainerRegistry = containerRegistry;
            Others = others;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets UDR value
        /// </summary>
        [JsonProperty(PropertyName = "UDR")]
        public IList<DiagnoseResult> UDR { get; set; }

        /// <summary>
        /// Gets or sets NSG value
        /// </summary>
        [JsonProperty(PropertyName = "NSG")]
        public IList<DiagnoseResult> NSG { get; set; }

        /// <summary>
        /// Gets or sets resource Lock
        /// </summary>
        [JsonProperty(PropertyName = "ResourceLock")]
        public IList<DiagnoseResult> ResourceLock { get; set; }

        /// <summary>
        /// Gets or sets DNS Resolution
        /// </summary>
        [JsonProperty(PropertyName = "DNSResolution")]
        public IList<DiagnoseResult> DNSResolution { get; set; }

        /// <summary>
        /// Gets or sets storage Account
        /// </summary>
        [JsonProperty(PropertyName = "StorageAccount")]
        public IList<DiagnoseResult> StorageAccount { get; set; }

        /// <summary>
        /// Gets or sets the KeyVault
        /// </summary>
        [JsonProperty(PropertyName = "KeyVault")]
        public IList<DiagnoseResult> KeyVault { get; set; }

        /// <summary>
        /// Gets or sets container Registry
        /// </summary>
        [JsonProperty(PropertyName = "ContainerRegistry")]
        public IList<DiagnoseResult> ContainerRegistry { get; set; }

        /// <summary>
        /// Gets or sets other items
        /// </summary>
        [JsonProperty(PropertyName = "Others")]
        public IList<DiagnoseResult> Others { get; set; }

    }
}
