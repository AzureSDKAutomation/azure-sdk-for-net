// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Kubernetes properties
    /// </summary>
    public partial class KubernetesProperties
    {
        /// <summary>
        /// Initializes a new instance of the KubernetesProperties class.
        /// </summary>
        public KubernetesProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the KubernetesProperties class.
        /// </summary>
        /// <param name="relayConnectionString">Relay connection
        /// string.</param>
        /// <param name="serviceBusConnectionString">ServiceBus connection
        /// string.</param>
        /// <param name="extensionPrincipalId">Extension principal-id.</param>
        /// <param name="extensionInstanceReleaseTrain">Extension instance
        /// release train.</param>
        /// <param name="vcName">VC name.</param>
        /// <param name="namespaceProperty">Compute namespace</param>
        /// <param name="defaultInstanceType">Default instance type</param>
        /// <param name="instanceTypes">Instance Type Schema</param>
        public KubernetesProperties(string relayConnectionString = default(string), string serviceBusConnectionString = default(string), string extensionPrincipalId = default(string), string extensionInstanceReleaseTrain = default(string), string vcName = default(string), string namespaceProperty = default(string), string defaultInstanceType = default(string), IDictionary<string, InstanceTypeSchema> instanceTypes = default(IDictionary<string, InstanceTypeSchema>))
        {
            RelayConnectionString = relayConnectionString;
            ServiceBusConnectionString = serviceBusConnectionString;
            ExtensionPrincipalId = extensionPrincipalId;
            ExtensionInstanceReleaseTrain = extensionInstanceReleaseTrain;
            VcName = vcName;
            NamespaceProperty = namespaceProperty;
            DefaultInstanceType = defaultInstanceType;
            InstanceTypes = instanceTypes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets relay connection string.
        /// </summary>
        [JsonProperty(PropertyName = "relayConnectionString")]
        public string RelayConnectionString { get; set; }

        /// <summary>
        /// Gets or sets serviceBus connection string.
        /// </summary>
        [JsonProperty(PropertyName = "serviceBusConnectionString")]
        public string ServiceBusConnectionString { get; set; }

        /// <summary>
        /// Gets or sets extension principal-id.
        /// </summary>
        [JsonProperty(PropertyName = "extensionPrincipalId")]
        public string ExtensionPrincipalId { get; set; }

        /// <summary>
        /// Gets or sets extension instance release train.
        /// </summary>
        [JsonProperty(PropertyName = "extensionInstanceReleaseTrain")]
        public string ExtensionInstanceReleaseTrain { get; set; }

        /// <summary>
        /// Gets or sets VC name.
        /// </summary>
        [JsonProperty(PropertyName = "vcName")]
        public string VcName { get; set; }

        /// <summary>
        /// Gets or sets compute namespace
        /// </summary>
        [JsonProperty(PropertyName = "namespace")]
        public string NamespaceProperty { get; set; }

        /// <summary>
        /// Gets or sets default instance type
        /// </summary>
        [JsonProperty(PropertyName = "defaultInstanceType")]
        public string DefaultInstanceType { get; set; }

        /// <summary>
        /// Gets or sets instance Type Schema
        /// </summary>
        [JsonProperty(PropertyName = "instanceTypes")]
        public IDictionary<string, InstanceTypeSchema> InstanceTypes { get; set; }

    }
}
