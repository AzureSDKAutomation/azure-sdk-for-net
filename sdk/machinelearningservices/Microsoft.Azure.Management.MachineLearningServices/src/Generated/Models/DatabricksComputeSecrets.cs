// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Secrets related to a Machine Learning compute based on Databricks.
    /// </summary>
    public partial class DatabricksComputeSecrets
    {
        /// <summary>
        /// Initializes a new instance of the DatabricksComputeSecrets class.
        /// </summary>
        public DatabricksComputeSecrets()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatabricksComputeSecrets class.
        /// </summary>
        /// <param name="computeType">The type of compute. Possible values
        /// include: 'AKS', 'Kubernetes', 'AmlCompute', 'ComputeInstance',
        /// 'DataFactory', 'VirtualMachine', 'HDInsight', 'Databricks',
        /// 'DataLakeAnalytics', 'SynapseSpark'</param>
        /// <param name="databricksAccessToken">access token for databricks
        /// account.</param>
        public DatabricksComputeSecrets(string computeType, string databricksAccessToken = default(string))
        {
            ComputeType = computeType;
            DatabricksAccessToken = databricksAccessToken;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the type of compute. Possible values include: 'AKS',
        /// 'Kubernetes', 'AmlCompute', 'ComputeInstance', 'DataFactory',
        /// 'VirtualMachine', 'HDInsight', 'Databricks', 'DataLakeAnalytics',
        /// 'SynapseSpark'
        /// </summary>
        [JsonProperty(PropertyName = "computeType")]
        public string ComputeType { get; set; }

        /// <summary>
        /// Gets or sets access token for databricks account.
        /// </summary>
        [JsonProperty(PropertyName = "databricksAccessToken")]
        public string DatabricksAccessToken { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ComputeType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ComputeType");
            }
        }
    }
}
