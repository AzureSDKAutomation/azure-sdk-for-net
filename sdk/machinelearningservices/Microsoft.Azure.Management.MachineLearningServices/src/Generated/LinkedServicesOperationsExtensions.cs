// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearningServices
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for LinkedServicesOperations.
    /// </summary>
    public static partial class LinkedServicesOperationsExtensions
    {
            /// <summary>
            /// List all linked services under an AML workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            public static LinkedServiceList List(this ILinkedServicesOperations operations, string resourceGroupName, string workspaceName)
            {
                return operations.ListAsync(resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List all linked services under an AML workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LinkedServiceList> ListAsync(this ILinkedServicesOperations operations, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Add a new linked service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='linkName'>
            /// Friendly name of the linked workspace
            /// </param>
            /// <param name='parameters'>
            /// The object for creating or updating a linked service
            /// </param>
            public static LinkedServiceResponse Create(this ILinkedServicesOperations operations, string resourceGroupName, string workspaceName, string linkName, LinkedServiceRequest parameters)
            {
                return operations.CreateAsync(resourceGroupName, workspaceName, linkName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Add a new linked service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='linkName'>
            /// Friendly name of the linked workspace
            /// </param>
            /// <param name='parameters'>
            /// The object for creating or updating a linked service
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LinkedServiceResponse> CreateAsync(this ILinkedServicesOperations operations, string resourceGroupName, string workspaceName, string linkName, LinkedServiceRequest parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, workspaceName, linkName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get the detail of a linked service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='linkName'>
            /// Friendly name of the linked workspace
            /// </param>
            public static LinkedServiceResponse Get(this ILinkedServicesOperations operations, string resourceGroupName, string workspaceName, string linkName)
            {
                return operations.GetAsync(resourceGroupName, workspaceName, linkName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the detail of a linked service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='linkName'>
            /// Friendly name of the linked workspace
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LinkedServiceResponse> GetAsync(this ILinkedServicesOperations operations, string resourceGroupName, string workspaceName, string linkName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, workspaceName, linkName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a linked service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='linkName'>
            /// Friendly name of the linked workspace
            /// </param>
            public static void Delete(this ILinkedServicesOperations operations, string resourceGroupName, string workspaceName, string linkName)
            {
                operations.DeleteAsync(resourceGroupName, workspaceName, linkName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a linked service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='linkName'>
            /// Friendly name of the linked workspace
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this ILinkedServicesOperations operations, string resourceGroupName, string workspaceName, string linkName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, workspaceName, linkName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
