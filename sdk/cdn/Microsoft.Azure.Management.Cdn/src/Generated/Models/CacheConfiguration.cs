// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Cdn.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Caching settings for a caching-type route. To disable caching, do not
    /// provide a cacheConfiguration object.
    /// </summary>
    public partial class CacheConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the CacheConfiguration class.
        /// </summary>
        public CacheConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CacheConfiguration class.
        /// </summary>
        /// <param name="queryStringBehavior">Caching behavior for the
        /// requests. Possible values include: 'Include', 'IncludeAll',
        /// 'Exclude', 'ExcludeAll'</param>
        /// <param name="queryParameters">query parameters to include or
        /// exclude (comma separated).</param>
        /// <param name="dynamicCompression">Whether to use dynamic compression
        /// for cached content. Possible values include: 'Enabled',
        /// 'Disabled'</param>
        /// <param name="cacheDuration">The duration for which the content
        /// needs to be cached. Allowed format is [d.]hh:mm:ss</param>
        public CacheConfiguration(string queryStringBehavior = default(string), string queryParameters = default(string), string dynamicCompression = default(string), System.TimeSpan? cacheDuration = default(System.TimeSpan?))
        {
            QueryStringBehavior = queryStringBehavior;
            QueryParameters = queryParameters;
            DynamicCompression = dynamicCompression;
            CacheDuration = cacheDuration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets caching behavior for the requests. Possible values
        /// include: 'Include', 'IncludeAll', 'Exclude', 'ExcludeAll'
        /// </summary>
        [JsonProperty(PropertyName = "queryStringBehavior")]
        public string QueryStringBehavior { get; set; }

        /// <summary>
        /// Gets or sets query parameters to include or exclude (comma
        /// separated).
        /// </summary>
        [JsonProperty(PropertyName = "queryParameters")]
        public string QueryParameters { get; set; }

        /// <summary>
        /// Gets or sets whether to use dynamic compression for cached content.
        /// Possible values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "dynamicCompression")]
        public string DynamicCompression { get; set; }

        /// <summary>
        /// Gets or sets the duration for which the content needs to be cached.
        /// Allowed format is [d.]hh:mm:ss
        /// </summary>
        [JsonProperty(PropertyName = "cacheDuration")]
        public System.TimeSpan? CacheDuration { get; set; }

    }
}
