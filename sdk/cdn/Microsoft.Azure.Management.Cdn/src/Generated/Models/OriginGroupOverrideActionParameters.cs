// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Cdn.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines the parameters for the origin group override action.
    /// </summary>
    public partial class OriginGroupOverrideActionParameters
    {
        /// <summary>
        /// Initializes a new instance of the
        /// OriginGroupOverrideActionParameters class.
        /// </summary>
        public OriginGroupOverrideActionParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// OriginGroupOverrideActionParameters class.
        /// </summary>
        /// <param name="originGroup">defines the OriginGroup that would
        /// override the DefaultOriginGroup.</param>
        /// <param name="routeType">Possible values include: 'Forward',
        /// 'Redirect'</param>
        /// <param name="forwardingProtocol">Protocol this rule will use when
        /// forwarding traffic to backends. Possible values include:
        /// 'HttpOnly', 'HttpsOnly', 'MatchRequest'</param>
        /// <param name="cacheConfiguration">The caching configuration
        /// associated with this rule.</param>
        /// <param name="urlRewriteConfiguration">The url rewrite configuration
        /// associated with this rule.</param>
        /// <param name="urlRedirectConfiguration">The url redirect
        /// configuration associated with this rule.</param>
        public OriginGroupOverrideActionParameters(ResourceReference originGroup, string routeType, string forwardingProtocol = default(string), CacheConfiguration cacheConfiguration = default(CacheConfiguration), UrlRewriteActionParameters urlRewriteConfiguration = default(UrlRewriteActionParameters), UrlRedirectActionParameters urlRedirectConfiguration = default(UrlRedirectActionParameters))
        {
            OriginGroup = originGroup;
            RouteType = routeType;
            ForwardingProtocol = forwardingProtocol;
            CacheConfiguration = cacheConfiguration;
            UrlRewriteConfiguration = urlRewriteConfiguration;
            UrlRedirectConfiguration = urlRedirectConfiguration;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for OriginGroupOverrideActionParameters class.
        /// </summary>
        static OriginGroupOverrideActionParameters()
        {
            Odatatype = "#Microsoft.Azure.Cdn.Models.DeliveryRuleOriginGroupOverrideActionParameters";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets defines the OriginGroup that would override the
        /// DefaultOriginGroup.
        /// </summary>
        [JsonProperty(PropertyName = "originGroup")]
        public ResourceReference OriginGroup { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Forward', 'Redirect'
        /// </summary>
        [JsonProperty(PropertyName = "routeType")]
        public string RouteType { get; set; }

        /// <summary>
        /// Gets or sets protocol this rule will use when forwarding traffic to
        /// backends. Possible values include: 'HttpOnly', 'HttpsOnly',
        /// 'MatchRequest'
        /// </summary>
        [JsonProperty(PropertyName = "forwardingProtocol")]
        public string ForwardingProtocol { get; set; }

        /// <summary>
        /// Gets or sets the caching configuration associated with this rule.
        /// </summary>
        [JsonProperty(PropertyName = "cacheConfiguration")]
        public CacheConfiguration CacheConfiguration { get; set; }

        /// <summary>
        /// Gets or sets the url rewrite configuration associated with this
        /// rule.
        /// </summary>
        [JsonProperty(PropertyName = "urlRewriteConfiguration")]
        public UrlRewriteActionParameters UrlRewriteConfiguration { get; set; }

        /// <summary>
        /// Gets or sets the url redirect configuration associated with this
        /// rule.
        /// </summary>
        [JsonProperty(PropertyName = "urlRedirectConfiguration")]
        public UrlRedirectActionParameters UrlRedirectConfiguration { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "@odata.type")]
        public static string Odatatype { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (OriginGroup == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "OriginGroup");
            }
            if (RouteType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RouteType");
            }
            if (UrlRewriteConfiguration != null)
            {
                UrlRewriteConfiguration.Validate();
            }
            if (UrlRedirectConfiguration != null)
            {
                UrlRedirectConfiguration.Validate();
            }
        }
    }
}
