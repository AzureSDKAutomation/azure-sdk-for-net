// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Mobility.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The walking directions guidance.
    /// </summary>
    public partial class WalkingDirection
    {
        /// <summary>
        /// Initializes a new instance of the WalkingDirection class.
        /// </summary>
        public WalkingDirection()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WalkingDirection class.
        /// </summary>
        /// <param name="relativeDirection">The relative walking direction
        /// associated with applicable step. Possible values include: 'depart',
        /// 'hardLeft', 'left', 'slightlyLeft', 'continue', 'slightlyRight',
        /// 'right', 'hardRight', 'circleClockwise', 'circleCounterclockwise',
        /// 'elevator', 'uturnLeft', 'uturnRight'</param>
        /// <param name="absoluteDirection">The absolute walking direction
        /// associated with this step. Possible values include: 'north',
        /// 'northeast', 'east', 'southeast', 'south', 'southwest', 'west',
        /// 'northwest'</param>
        public WalkingDirection(string relativeDirection = default(string), string absoluteDirection = default(string))
        {
            RelativeDirection = relativeDirection;
            AbsoluteDirection = absoluteDirection;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the relative walking direction associated with
        /// applicable step. Possible values include: 'depart', 'hardLeft',
        /// 'left', 'slightlyLeft', 'continue', 'slightlyRight', 'right',
        /// 'hardRight', 'circleClockwise', 'circleCounterclockwise',
        /// 'elevator', 'uturnLeft', 'uturnRight'
        /// </summary>
        [JsonProperty(PropertyName = "relativeDirection")]
        public string RelativeDirection { get; set; }

        /// <summary>
        /// Gets or sets the absolute walking direction associated with this
        /// step. Possible values include: 'north', 'northeast', 'east',
        /// 'southeast', 'south', 'southwest', 'west', 'northwest'
        /// </summary>
        [JsonProperty(PropertyName = "absoluteDirection")]
        public string AbsoluteDirection { get; set; }

    }
}
