// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Maps.Service.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class RouteItineraryLeg
    {
        /// <summary>
        /// Initializes a new instance of the RouteItineraryLeg class.
        /// </summary>
        public RouteItineraryLeg()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RouteItineraryLeg class.
        /// </summary>
        /// <param name="legType">The travel mode of the leg. Possible values
        /// include: 'Walk', 'Bicycle', 'Tram', 'Subway', 'Rail', 'Bus',
        /// 'Ferry', 'Cable', 'Gondola', 'Funicular', 'PathWayWalk', 'Wait',
        /// 'WaitOnVehicle'</param>
        /// <param name="legFare">Leg level public transit fare information.
        /// Returned only if fare information is available for the entire
        /// itinerary.</param>
        /// <param name="legStartTime">Start time for the leg in ISO 8601
        /// format, e.g. 1996-12-19T19:39:57-08:00.</param>
        /// <param name="legEndTime">End time for the leg in ISO 8601 format,
        /// e.g. 1996-12-19T19:39:57-08:00.</param>
        /// <param name="caption">For Public Transit legs the caption of the
        /// line serving the leg, for example, line number.</param>
        /// <param name="lengthInMeters">The total distance of the leg in
        /// meters.</param>
        public RouteItineraryLeg(string legType = default(string), LegFare legFare = default(LegFare), string legStartTime = default(string), string legEndTime = default(string), string caption = default(string), int? lengthInMeters = default(int?))
        {
            LegType = legType;
            LegFare = legFare;
            LegStartTime = legStartTime;
            LegEndTime = legEndTime;
            Caption = caption;
            LengthInMeters = lengthInMeters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the travel mode of the leg. Possible values include:
        /// 'Walk', 'Bicycle', 'Tram', 'Subway', 'Rail', 'Bus', 'Ferry',
        /// 'Cable', 'Gondola', 'Funicular', 'PathWayWalk', 'Wait',
        /// 'WaitOnVehicle'
        /// </summary>
        [JsonProperty(PropertyName = "legType")]
        public string LegType { get; set; }

        /// <summary>
        /// Gets or sets leg level public transit fare information. Returned
        /// only if fare information is available for the entire itinerary.
        /// </summary>
        [JsonProperty(PropertyName = "legFare")]
        public LegFare LegFare { get; set; }

        /// <summary>
        /// Gets or sets start time for the leg in ISO 8601 format, e.g.
        /// 1996-12-19T19:39:57-08:00.
        /// </summary>
        [JsonProperty(PropertyName = "legStartTime")]
        public string LegStartTime { get; set; }

        /// <summary>
        /// Gets or sets end time for the leg in ISO 8601 format, e.g.
        /// 1996-12-19T19:39:57-08:00.
        /// </summary>
        [JsonProperty(PropertyName = "legEndTime")]
        public string LegEndTime { get; set; }

        /// <summary>
        /// Gets or sets for Public Transit legs the caption of the line
        /// serving the leg, for example, line number.
        /// </summary>
        [JsonProperty(PropertyName = "caption")]
        public string Caption { get; set; }

        /// <summary>
        /// Gets or sets the total distance of the leg in meters.
        /// </summary>
        [JsonProperty(PropertyName = "lengthInMeters")]
        public int? LengthInMeters { get; set; }

    }
}
