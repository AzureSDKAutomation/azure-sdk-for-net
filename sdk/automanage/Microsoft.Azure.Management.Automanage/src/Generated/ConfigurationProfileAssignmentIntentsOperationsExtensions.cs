// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automanage
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ConfigurationProfileAssignmentIntentsOperations.
    /// </summary>
    public static partial class ConfigurationProfileAssignmentIntentsOperationsExtensions
    {
            /// <summary>
            /// Creates an association between a VM and Automanage configuration profile
            /// assignment intent
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='configurationProfileAssignmentIntentName'>
            /// Name of the configuration profile assignment intent. Only default is
            /// supported.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to the create or update configuration profile
            /// assignment intent.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='vmName'>
            /// The name of the virtual machine.
            /// </param>
            public static ConfigurationProfileAssignmentIntent CreateOrUpdate(this IConfigurationProfileAssignmentIntentsOperations operations, string configurationProfileAssignmentIntentName, ConfigurationProfileAssignmentIntent parameters, string resourceGroupName, string vmName)
            {
                return operations.CreateOrUpdateAsync(configurationProfileAssignmentIntentName, parameters, resourceGroupName, vmName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates an association between a VM and Automanage configuration profile
            /// assignment intent
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='configurationProfileAssignmentIntentName'>
            /// Name of the configuration profile assignment intent. Only default is
            /// supported.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to the create or update configuration profile
            /// assignment intent.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='vmName'>
            /// The name of the virtual machine.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ConfigurationProfileAssignmentIntent> CreateOrUpdateAsync(this IConfigurationProfileAssignmentIntentsOperations operations, string configurationProfileAssignmentIntentName, ConfigurationProfileAssignmentIntent parameters, string resourceGroupName, string vmName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(configurationProfileAssignmentIntentName, parameters, resourceGroupName, vmName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get information about a configuration profile assignment intent
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='configurationProfileAssignmentIntentName'>
            /// The configuration profile assignment intent name.
            /// </param>
            /// <param name='vmName'>
            /// The name of the virtual machine.
            /// </param>
            public static ConfigurationProfileAssignmentIntent Get(this IConfigurationProfileAssignmentIntentsOperations operations, string resourceGroupName, string configurationProfileAssignmentIntentName, string vmName)
            {
                return operations.GetAsync(resourceGroupName, configurationProfileAssignmentIntentName, vmName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get information about a configuration profile assignment intent
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='configurationProfileAssignmentIntentName'>
            /// The configuration profile assignment intent name.
            /// </param>
            /// <param name='vmName'>
            /// The name of the virtual machine.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ConfigurationProfileAssignmentIntent> GetAsync(this IConfigurationProfileAssignmentIntentsOperations operations, string resourceGroupName, string configurationProfileAssignmentIntentName, string vmName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, configurationProfileAssignmentIntentName, vmName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get list of configuration profile assignment intents within a given
            /// resource group
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            public static IEnumerable<ConfigurationProfileAssignmentIntent> ListByResourceGroup(this IConfigurationProfileAssignmentIntentsOperations operations, string resourceGroupName)
            {
                return operations.ListByResourceGroupAsync(resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get list of configuration profile assignment intents within a given
            /// resource group
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IEnumerable<ConfigurationProfileAssignmentIntent>> ListByResourceGroupAsync(this IConfigurationProfileAssignmentIntentsOperations operations, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get list of configuration profile assignment intents under a given
            /// subscription
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IEnumerable<ConfigurationProfileAssignmentIntent> ListBySubscription(this IConfigurationProfileAssignmentIntentsOperations operations)
            {
                return operations.ListBySubscriptionAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get list of configuration profile assignment intents under a given
            /// subscription
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IEnumerable<ConfigurationProfileAssignmentIntent>> ListBySubscriptionAsync(this IConfigurationProfileAssignmentIntentsOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListBySubscriptionWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
