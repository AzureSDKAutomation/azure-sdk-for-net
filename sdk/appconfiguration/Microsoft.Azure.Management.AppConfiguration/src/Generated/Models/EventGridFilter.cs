// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AppConfiguration.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The event grid filter resource along with all resource properties.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class EventGridFilter : IResource
    {
        /// <summary>
        /// Initializes a new instance of the EventGridFilter class.
        /// </summary>
        public EventGridFilter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EventGridFilter class.
        /// </summary>
        /// <param name="id">The resource ID.</param>
        /// <param name="name">The name of the resource.</param>
        /// <param name="type">The type of the resource.</param>
        /// <param name="provisioningState">The provisioning state of the event
        /// grid filter. Possible values include: 'Creating', 'Updating',
        /// 'Deleting', 'Succeeded', 'Failed', 'Canceled'</param>
        /// <param name="filter">Properties describing the filtering behavior
        /// of the event grid filter.</param>
        /// <param name="subscriberIdentityInfo">Information describing the
        /// event subscriber.</param>
        public EventGridFilter(string id = default(string), string name = default(string), string type = default(string), string provisioningState = default(string), EventFilter filter = default(EventFilter), SubscriberIdentityInfo subscriberIdentityInfo = default(SubscriberIdentityInfo))
        {
            Id = id;
            Name = name;
            Type = type;
            ProvisioningState = provisioningState;
            Filter = filter;
            SubscriberIdentityInfo = subscriberIdentityInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the resource ID.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets the name of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the type of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets the provisioning state of the event grid filter. Possible
        /// values include: 'Creating', 'Updating', 'Deleting', 'Succeeded',
        /// 'Failed', 'Canceled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets properties describing the filtering behavior of the event grid
        /// filter.
        /// </summary>
        [JsonProperty(PropertyName = "properties.filter")]
        public EventFilter Filter { get; private set; }

        /// <summary>
        /// Gets information describing the event subscriber.
        /// </summary>
        [JsonProperty(PropertyName = "properties.subscriberIdentityInfo")]
        public SubscriberIdentityInfo SubscriberIdentityInfo { get; private set; }

    }
}
