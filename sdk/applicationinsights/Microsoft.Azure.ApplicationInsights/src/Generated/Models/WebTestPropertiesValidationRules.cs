// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApplicationInsights.Management.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The collection of validation rule properties
    /// </summary>
    public partial class WebTestPropertiesValidationRules
    {
        /// <summary>
        /// Initializes a new instance of the WebTestPropertiesValidationRules
        /// class.
        /// </summary>
        public WebTestPropertiesValidationRules()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WebTestPropertiesValidationRules
        /// class.
        /// </summary>
        /// <param name="contentValidation">The collection of content
        /// validation properties</param>
        /// <param name="sSLCheck">Checks to see if the SSL cert is still
        /// valid.</param>
        /// <param name="sSLCertRemainingLifetimeCheck">A number of days to
        /// check still remain before the the existing SSL cert expires.  Value
        /// must be positive and the SSLCheck must be set to true.</param>
        /// <param name="expectedHttpStatusCode">Validate that the WebTest
        /// returns the http status code provided.</param>
        /// <param name="ignoreHttpsStatusCode">When set, validation will
        /// ignore the status code.</param>
        public WebTestPropertiesValidationRules(WebTestPropertiesValidationRulesContentValidation contentValidation = default(WebTestPropertiesValidationRulesContentValidation), bool? sSLCheck = default(bool?), int? sSLCertRemainingLifetimeCheck = default(int?), int? expectedHttpStatusCode = default(int?), bool? ignoreHttpsStatusCode = default(bool?))
        {
            ContentValidation = contentValidation;
            SSLCheck = sSLCheck;
            SSLCertRemainingLifetimeCheck = sSLCertRemainingLifetimeCheck;
            ExpectedHttpStatusCode = expectedHttpStatusCode;
            IgnoreHttpsStatusCode = ignoreHttpsStatusCode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the collection of content validation properties
        /// </summary>
        [JsonProperty(PropertyName = "ContentValidation")]
        public WebTestPropertiesValidationRulesContentValidation ContentValidation { get; set; }

        /// <summary>
        /// Gets or sets checks to see if the SSL cert is still valid.
        /// </summary>
        [JsonProperty(PropertyName = "SSLCheck")]
        public bool? SSLCheck { get; set; }

        /// <summary>
        /// Gets or sets a number of days to check still remain before the the
        /// existing SSL cert expires.  Value must be positive and the SSLCheck
        /// must be set to true.
        /// </summary>
        [JsonProperty(PropertyName = "SSLCertRemainingLifetimeCheck")]
        public int? SSLCertRemainingLifetimeCheck { get; set; }

        /// <summary>
        /// Gets or sets validate that the WebTest returns the http status code
        /// provided.
        /// </summary>
        [JsonProperty(PropertyName = "ExpectedHttpStatusCode")]
        public int? ExpectedHttpStatusCode { get; set; }

        /// <summary>
        /// Gets or sets when set, validation will ignore the status code.
        /// </summary>
        [JsonProperty(PropertyName = "IgnoreHttpsStatusCode")]
        public bool? IgnoreHttpsStatusCode { get; set; }

    }
}
