// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The onboarding request entity analytics parameters
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class EntityAnalyticsOnboardingParameters
    {
        /// <summary>
        /// Initializes a new instance of the
        /// EntityAnalyticsOnboardingParameters class.
        /// </summary>
        public EntityAnalyticsOnboardingParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// EntityAnalyticsOnboardingParameters class.
        /// </summary>
        /// <param name="enabled">A flag indicates that the user wants entity
        /// analytics</param>
        /// <param name="dataSources">The relevant data sources that enriched
        /// by ueba</param>
        public EntityAnalyticsOnboardingParameters(bool? enabled = default(bool?), IList<string> dataSources = default(IList<string>))
        {
            Enabled = enabled;
            DataSources = dataSources;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a flag indicates that the user wants entity analytics
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool? Enabled { get; set; }

        /// <summary>
        /// Gets or sets the relevant data sources that enriched by ueba
        /// </summary>
        [JsonProperty(PropertyName = "uebaDataSources.dataSources")]
        public IList<string> DataSources { get; set; }

    }
}
