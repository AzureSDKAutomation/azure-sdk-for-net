// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataCollaboration.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A proposal for data collaboration contract, can be shared and edited by
    /// multiple participants before signing.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Proposal : ProxyDto
    {
        /// <summary>
        /// Initializes a new instance of the Proposal class.
        /// </summary>
        public Proposal()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Proposal class.
        /// </summary>
        /// <param name="id">The resource id of the azure resource</param>
        /// <param name="name">Name of the azure resource</param>
        /// <param name="type">Type of the azure resource</param>
        /// <param name="description">Textual description of the
        /// proposal</param>
        /// <param name="invitationId">The invitation id for joining a
        /// proposal</param>
        /// <param name="lastUpdated">Timestamp of the last time the proposal
        /// or any of its underlying resources were updated.</param>
        /// <param name="participants">The list of participants participating
        /// in the proposal</param>
        /// <param name="terms">Terms of the proposal</param>
        public Proposal(string id = default(string), string name = default(string), string type = default(string), string description = default(string), string invitationId = default(string), System.DateTime? lastUpdated = default(System.DateTime?), IList<Participant> participants = default(IList<Participant>), string terms = default(string))
            : base(id, name, type)
        {
            Description = description;
            InvitationId = invitationId;
            LastUpdated = lastUpdated;
            Participants = participants;
            Terms = terms;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets textual description of the proposal
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the invitation id for joining a proposal
        /// </summary>
        [JsonProperty(PropertyName = "properties.invitationId")]
        public string InvitationId { get; set; }

        /// <summary>
        /// Gets timestamp of the last time the proposal or any of its
        /// underlying resources were updated.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastUpdated")]
        public System.DateTime? LastUpdated { get; private set; }

        /// <summary>
        /// Gets the list of participants participating in the proposal
        /// </summary>
        [JsonProperty(PropertyName = "properties.participants")]
        public IList<Participant> Participants { get; private set; }

        /// <summary>
        /// Gets or sets terms of the proposal
        /// </summary>
        [JsonProperty(PropertyName = "properties.terms")]
        public string Terms { get; set; }

    }
}
