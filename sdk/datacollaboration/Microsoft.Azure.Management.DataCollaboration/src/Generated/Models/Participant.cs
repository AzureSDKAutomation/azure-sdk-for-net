// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataCollaboration.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Participant information
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Participant : ProxyDto
    {
        /// <summary>
        /// Initializes a new instance of the Participant class.
        /// </summary>
        public Participant()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Participant class.
        /// </summary>
        /// <param name="id">The resource id of the azure resource</param>
        /// <param name="name">Name of the azure resource</param>
        /// <param name="systemData">System Data of the Azure resource.</param>
        /// <param name="type">Type of the azure resource</param>
        /// <param name="createdAt">Time at which the account was
        /// created.</param>
        /// <param name="participantId">Unique id for identifying a
        /// participant</param>
        /// <param name="proposalApprovalStatus">Current approval status.
        /// Possible values include: 'Pending', 'Approved', 'Expired'</param>
        /// <param name="tenantName">Tenant name of the participant</param>
        /// <param name="userEmail">Email of the user who created the
        /// resource</param>
        /// <param name="userName">Name of the user who created the
        /// resource</param>
        /// <param name="workspaceDisplayName">Display name of the
        /// workspace</param>
        public Participant(string id = default(string), string name = default(string), ProxyDtoSystemData systemData = default(ProxyDtoSystemData), string type = default(string), System.DateTime? createdAt = default(System.DateTime?), string participantId = default(string), string proposalApprovalStatus = default(string), string tenantName = default(string), string userEmail = default(string), string userName = default(string), string workspaceDisplayName = default(string))
            : base(id, name, systemData, type)
        {
            CreatedAt = createdAt;
            ParticipantId = participantId;
            ProposalApprovalStatus = proposalApprovalStatus;
            TenantName = tenantName;
            UserEmail = userEmail;
            UserName = userName;
            WorkspaceDisplayName = workspaceDisplayName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets time at which the account was created.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdAt")]
        public System.DateTime? CreatedAt { get; private set; }

        /// <summary>
        /// Gets unique id for identifying a participant
        /// </summary>
        [JsonProperty(PropertyName = "properties.participantId")]
        public string ParticipantId { get; private set; }

        /// <summary>
        /// Gets current approval status. Possible values include: 'Pending',
        /// 'Approved', 'Expired'
        /// </summary>
        [JsonProperty(PropertyName = "properties.proposalApprovalStatus")]
        public string ProposalApprovalStatus { get; private set; }

        /// <summary>
        /// Gets tenant name of the participant
        /// </summary>
        [JsonProperty(PropertyName = "properties.tenantName")]
        public string TenantName { get; private set; }

        /// <summary>
        /// Gets email of the user who created the resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.userEmail")]
        public string UserEmail { get; private set; }

        /// <summary>
        /// Gets name of the user who created the resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.userName")]
        public string UserName { get; private set; }

        /// <summary>
        /// Gets display name of the workspace
        /// </summary>
        [JsonProperty(PropertyName = "properties.workspaceDisplayName")]
        public string WorkspaceDisplayName { get; private set; }

    }
}
