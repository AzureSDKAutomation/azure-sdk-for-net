// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataLake.Store
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for VirtualNetworkOrSubnetsOperations.
    /// </summary>
    public static partial class VirtualNetworkOrSubnetsOperationsExtensions
    {
            /// <summary>
            /// Delete virtual network or subnets.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// The resource location without whitespace.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to DeleteVirtualNetworkOrSubnets.
            /// </param>
            public static void DeleteById(this IVirtualNetworkOrSubnetsOperations operations, string location, DeleteVirtualNetworkOrSubnetsParameters parameters)
            {
                operations.DeleteByIdAsync(location, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete virtual network or subnets.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// The resource location without whitespace.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to DeleteVirtualNetworkOrSubnets.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteByIdAsync(this IVirtualNetworkOrSubnetsOperations operations, string location, DeleteVirtualNetworkOrSubnetsParameters parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteByIdWithHttpMessagesAsync(location, parameters, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
