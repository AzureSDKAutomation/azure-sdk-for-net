// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Network manager security configuration import parameters.
    /// </summary>
    public partial class NetworkManagerSecurityConfigurationImport
    {
        /// <summary>
        /// Initializes a new instance of the
        /// NetworkManagerSecurityConfigurationImport class.
        /// </summary>
        public NetworkManagerSecurityConfigurationImport()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// NetworkManagerSecurityConfigurationImport class.
        /// </summary>
        /// <param name="networkSecurityGroupImports">List of nsg uris.</param>
        /// <param name="importDenyRulesAsAdminRules">Flag if import deny rules
        /// as admin rules.</param>
        /// <param name="adminSecurityConfigurationUri">Admin security
        /// configuration Uri.</param>
        /// <param name="removeAllowVnetInboundRule">Flag if need to remove
        /// allow vnet inbound rule.</param>
        /// <param name="removeAllowAzureLoadBalancerInboundRule">Flag if need
        /// to remove allow azure load balancer inbound rule.</param>
        /// <param name="removeAllowVnetOutboundRule">Flag if need to remove
        /// allow vnet outbound rule.</param>
        /// <param name="removeAllowInternetOutboundRule">Flag if need to
        /// remove allow Internet outbound rule.</param>
        public NetworkManagerSecurityConfigurationImport(IList<NetworkSecurityGroupImport> networkSecurityGroupImports = default(IList<NetworkSecurityGroupImport>), bool? importDenyRulesAsAdminRules = default(bool?), string adminSecurityConfigurationUri = default(string), bool? removeAllowVnetInboundRule = default(bool?), bool? removeAllowAzureLoadBalancerInboundRule = default(bool?), bool? removeAllowVnetOutboundRule = default(bool?), bool? removeAllowInternetOutboundRule = default(bool?))
        {
            NetworkSecurityGroupImports = networkSecurityGroupImports;
            ImportDenyRulesAsAdminRules = importDenyRulesAsAdminRules;
            AdminSecurityConfigurationUri = adminSecurityConfigurationUri;
            RemoveAllowVnetInboundRule = removeAllowVnetInboundRule;
            RemoveAllowAzureLoadBalancerInboundRule = removeAllowAzureLoadBalancerInboundRule;
            RemoveAllowVnetOutboundRule = removeAllowVnetOutboundRule;
            RemoveAllowInternetOutboundRule = removeAllowInternetOutboundRule;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of nsg uris.
        /// </summary>
        [JsonProperty(PropertyName = "networkSecurityGroupImports")]
        public IList<NetworkSecurityGroupImport> NetworkSecurityGroupImports { get; set; }

        /// <summary>
        /// Gets or sets flag if import deny rules as admin rules.
        /// </summary>
        [JsonProperty(PropertyName = "importDenyRulesAsAdminRules")]
        public bool? ImportDenyRulesAsAdminRules { get; set; }

        /// <summary>
        /// Gets or sets admin security configuration Uri.
        /// </summary>
        [JsonProperty(PropertyName = "adminSecurityConfigurationUri")]
        public string AdminSecurityConfigurationUri { get; set; }

        /// <summary>
        /// Gets or sets flag if need to remove allow vnet inbound rule.
        /// </summary>
        [JsonProperty(PropertyName = "removeAllowVnetInboundRule")]
        public bool? RemoveAllowVnetInboundRule { get; set; }

        /// <summary>
        /// Gets or sets flag if need to remove allow azure load balancer
        /// inbound rule.
        /// </summary>
        [JsonProperty(PropertyName = "removeAllowAzureLoadBalancerInboundRule")]
        public bool? RemoveAllowAzureLoadBalancerInboundRule { get; set; }

        /// <summary>
        /// Gets or sets flag if need to remove allow vnet outbound rule.
        /// </summary>
        [JsonProperty(PropertyName = "removeAllowVnetOutboundRule")]
        public bool? RemoveAllowVnetOutboundRule { get; set; }

        /// <summary>
        /// Gets or sets flag if need to remove allow Internet outbound rule.
        /// </summary>
        [JsonProperty(PropertyName = "removeAllowInternetOutboundRule")]
        public bool? RemoveAllowInternetOutboundRule { get; set; }

    }
}
