// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// General security configuration Rule.
    /// </summary>
    public partial class SecurityConfigurationRule
    {
        /// <summary>
        /// Initializes a new instance of the SecurityConfigurationRule class.
        /// </summary>
        public SecurityConfigurationRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SecurityConfigurationRule class.
        /// </summary>
        /// <param name="securityType">Commit Type. Possible values include:
        /// 'AdminPolicy', 'UserPolicy'</param>
        /// <param name="securityAdminRule">Security admin rule.</param>
        /// <param name="securityUserRule">Security user rule.</param>
        public SecurityConfigurationRule(string securityType = default(string), AdminRule securityAdminRule = default(AdminRule), UserRule securityUserRule = default(UserRule))
        {
            SecurityType = securityType;
            SecurityAdminRule = securityAdminRule;
            SecurityUserRule = securityUserRule;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets commit Type. Possible values include: 'AdminPolicy',
        /// 'UserPolicy'
        /// </summary>
        [JsonProperty(PropertyName = "securityType")]
        public string SecurityType { get; set; }

        /// <summary>
        /// Gets or sets security admin rule.
        /// </summary>
        [JsonProperty(PropertyName = "securityAdminRule")]
        public AdminRule SecurityAdminRule { get; set; }

        /// <summary>
        /// Gets or sets security user rule.
        /// </summary>
        [JsonProperty(PropertyName = "securityUserRule")]
        public UserRule SecurityUserRule { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SecurityAdminRule != null)
            {
                SecurityAdminRule.Validate();
            }
            if (SecurityUserRule != null)
            {
                SecurityUserRule.Validate();
            }
        }
    }
}
