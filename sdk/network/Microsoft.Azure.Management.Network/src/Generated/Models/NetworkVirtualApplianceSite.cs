// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Virtual Appliance Site resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class NetworkVirtualApplianceSite : Resource
    {
        /// <summary>
        /// Initializes a new instance of the NetworkVirtualApplianceSite
        /// class.
        /// </summary>
        public NetworkVirtualApplianceSite()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkVirtualApplianceSite
        /// class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="location">Resource location.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="networkVirtualApplianceIds">List of Network Virtual
        /// Appliances under a specific virtual appliance site.</param>
        /// <param name="addressPrefix">Address Prefix.</param>
        /// <param name="o365Policy">Office 365 Policy.</param>
        /// <param name="provisioningState">The provisioning state of the
        /// resource. Possible values include: 'Succeeded', 'Updating',
        /// 'Deleting', 'Failed'</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated.</param>
        public NetworkVirtualApplianceSite(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), IList<string> networkVirtualApplianceIds = default(IList<string>), string addressPrefix = default(string), SiteOffice365PolicyProperties o365Policy = default(SiteOffice365PolicyProperties), string provisioningState = default(string), string etag = default(string))
            : base(id, name, type, location, tags)
        {
            NetworkVirtualApplianceIds = networkVirtualApplianceIds;
            AddressPrefix = addressPrefix;
            O365Policy = o365Policy;
            ProvisioningState = provisioningState;
            Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of Network Virtual Appliances under a specific
        /// virtual appliance site.
        /// </summary>
        [JsonProperty(PropertyName = "properties.networkVirtualApplianceIds")]
        public IList<string> NetworkVirtualApplianceIds { get; set; }

        /// <summary>
        /// Gets or sets address Prefix.
        /// </summary>
        [JsonProperty(PropertyName = "properties.addressPrefix")]
        public string AddressPrefix { get; set; }

        /// <summary>
        /// Gets or sets office 365 Policy.
        /// </summary>
        [JsonProperty(PropertyName = "properties.o365Policy")]
        public SiteOffice365PolicyProperties O365Policy { get; set; }

        /// <summary>
        /// Gets the provisioning state of the resource. Possible values
        /// include: 'Succeeded', 'Updating', 'Deleting', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; private set; }

    }
}
