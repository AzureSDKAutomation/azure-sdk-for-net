// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Support.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Object that represents SupportTicketDetails resource
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SupportTicketDetails : IResource
    {
        /// <summary>
        /// Initializes a new instance of the SupportTicketDetails class.
        /// </summary>
        public SupportTicketDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SupportTicketDetails class.
        /// </summary>
        /// <param name="id">Id of the resource</param>
        /// <param name="name">Name of the resource</param>
        /// <param name="type">Type of the resource
        /// 'Microsoft.Support/supportTickets</param>
        /// <param name="supportTicketId">System generated support ticket
        /// id.</param>
        /// <param name="description">Description of the support
        /// ticket.</param>
        /// <param name="problemClassificationDetails">This is the issue or the
        /// problem details that the support ticket is opened for.</param>
        /// <param name="severity">Severity of the support ticket. Possible
        /// values include: 'minimal', 'moderate', 'critical'</param>
        /// <param name="enrollmentId">Enrollment ID associated with the
        /// support ticket.</param>
        /// <param name="productionOutage">Indicates if this is a production
        /// outage.</param>
        /// <param name="is24X7Response">Indicates if this is a 24x7 support
        /// ticket.</param>
        /// <param name="contactDetails">User information associated with the
        /// support ticket.</param>
        /// <param name="serviceLevelAgreement">Service Level Agreement
        /// information for this support ticket.</param>
        /// <param name="supportEngineer">Information about support engineer
        /// working on this support ticket.</param>
        /// <param name="supportPlanType">Support plan type associated with the
        /// support ticket.</param>
        /// <param name="title">Title of the support ticket.</param>
        /// <param name="serviceDetails">This is the Azure service details for
        /// which the support ticket was opened.</param>
        /// <param name="status">Status of the support ticket.</param>
        /// <param name="createdDate">Time in UTC (ISO 8601 format) when
        /// support ticket was created.</param>
        /// <param name="modifiedDate">Time in UTC (ISO 8601 format) when
        /// support ticket was last modified.</param>
        /// <param name="technicalTicketDetails">Additional ticket details
        /// associated with a technical support ticket request. </param>
        /// <param name="quotaTicketDetails">Additional ticket details
        /// associated with a quota support ticket request. </param>
        public SupportTicketDetails(string id = default(string), string name = default(string), string type = default(string), string supportTicketId = default(string), string description = default(string), ProblemClassificationDetails problemClassificationDetails = default(ProblemClassificationDetails), string severity = default(string), string enrollmentId = default(string), bool? productionOutage = default(bool?), bool? is24X7Response = default(bool?), ContactProfile contactDetails = default(ContactProfile), ServiceLevelAgreement serviceLevelAgreement = default(ServiceLevelAgreement), SupportEngineer supportEngineer = default(SupportEngineer), string supportPlanType = default(string), string title = default(string), ServiceDetails serviceDetails = default(ServiceDetails), string status = default(string), System.DateTime? createdDate = default(System.DateTime?), System.DateTime? modifiedDate = default(System.DateTime?), TechnicalTicketDetails technicalTicketDetails = default(TechnicalTicketDetails), QuotaTicketDetails quotaTicketDetails = default(QuotaTicketDetails))
        {
            Id = id;
            Name = name;
            Type = type;
            SupportTicketId = supportTicketId;
            Description = description;
            ProblemClassificationDetails = problemClassificationDetails;
            Severity = severity;
            EnrollmentId = enrollmentId;
            ProductionOutage = productionOutage;
            Is24X7Response = is24X7Response;
            ContactDetails = contactDetails;
            ServiceLevelAgreement = serviceLevelAgreement;
            SupportEngineer = supportEngineer;
            SupportPlanType = supportPlanType;
            Title = title;
            ServiceDetails = serviceDetails;
            Status = status;
            CreatedDate = createdDate;
            ModifiedDate = modifiedDate;
            TechnicalTicketDetails = technicalTicketDetails;
            QuotaTicketDetails = quotaTicketDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets id of the resource
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets name of the resource
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets type of the resource 'Microsoft.Support/supportTickets
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets or sets system generated support ticket id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.supportTicketId")]
        public string SupportTicketId { get; set; }

        /// <summary>
        /// Gets or sets description of the support ticket.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets this is the issue or the problem details that the
        /// support ticket is opened for.
        /// </summary>
        [JsonProperty(PropertyName = "properties.problemClassificationDetails")]
        public ProblemClassificationDetails ProblemClassificationDetails { get; set; }

        /// <summary>
        /// Gets or sets severity of the support ticket. Possible values
        /// include: 'minimal', 'moderate', 'critical'
        /// </summary>
        [JsonProperty(PropertyName = "properties.severity")]
        public string Severity { get; set; }

        /// <summary>
        /// Gets or sets enrollment ID associated with the support ticket.
        /// </summary>
        [JsonProperty(PropertyName = "properties.enrollmentId")]
        public string EnrollmentId { get; set; }

        /// <summary>
        /// Gets or sets indicates if this is a production outage.
        /// </summary>
        [JsonProperty(PropertyName = "properties.productionOutage")]
        public bool? ProductionOutage { get; set; }

        /// <summary>
        /// Gets or sets indicates if this is a 24x7 support ticket.
        /// </summary>
        [JsonProperty(PropertyName = "properties.is24X7Response")]
        public bool? Is24X7Response { get; set; }

        /// <summary>
        /// Gets or sets user information associated with the support ticket.
        /// </summary>
        [JsonProperty(PropertyName = "properties.contactDetails")]
        public ContactProfile ContactDetails { get; set; }

        /// <summary>
        /// Gets or sets service Level Agreement information for this support
        /// ticket.
        /// </summary>
        [JsonProperty(PropertyName = "properties.serviceLevelAgreement")]
        public ServiceLevelAgreement ServiceLevelAgreement { get; set; }

        /// <summary>
        /// Gets or sets information about support engineer working on this
        /// support ticket.
        /// </summary>
        [JsonProperty(PropertyName = "properties.supportEngineer")]
        public SupportEngineer SupportEngineer { get; set; }

        /// <summary>
        /// Gets or sets support plan type associated with the support ticket.
        /// </summary>
        [JsonProperty(PropertyName = "properties.supportPlanType")]
        public string SupportPlanType { get; set; }

        /// <summary>
        /// Gets or sets title of the support ticket.
        /// </summary>
        [JsonProperty(PropertyName = "properties.title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or sets this is the Azure service details for which the
        /// support ticket was opened.
        /// </summary>
        [JsonProperty(PropertyName = "properties.serviceDetails")]
        public ServiceDetails ServiceDetails { get; set; }

        /// <summary>
        /// Gets or sets status of the support ticket.
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets time in UTC (ISO 8601 format) when support ticket was
        /// created.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdDate")]
        public System.DateTime? CreatedDate { get; set; }

        /// <summary>
        /// Gets or sets time in UTC (ISO 8601 format) when support ticket was
        /// last modified.
        /// </summary>
        [JsonProperty(PropertyName = "properties.modifiedDate")]
        public System.DateTime? ModifiedDate { get; set; }

        /// <summary>
        /// Gets or sets additional ticket details associated with a technical
        /// support ticket request.
        /// </summary>
        [JsonProperty(PropertyName = "properties.technicalTicketDetails")]
        public TechnicalTicketDetails TechnicalTicketDetails { get; set; }

        /// <summary>
        /// Gets or sets additional ticket details associated with a quota
        /// support ticket request.
        /// </summary>
        [JsonProperty(PropertyName = "properties.quotaTicketDetails")]
        public QuotaTicketDetails QuotaTicketDetails { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ContactDetails != null)
            {
                ContactDetails.Validate();
            }
        }
    }
}
