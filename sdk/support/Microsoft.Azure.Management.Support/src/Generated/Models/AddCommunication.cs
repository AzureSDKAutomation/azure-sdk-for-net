// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Support.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Communication details.
    /// </summary>
    public partial class AddCommunication
    {
        /// <summary>
        /// Initializes a new instance of the AddCommunication class.
        /// </summary>
        public AddCommunication()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AddCommunication class.
        /// </summary>
        /// <param name="subject">Subject in plain text</param>
        /// <param name="body">Body in plain text</param>
        /// <param name="sender">Sender of the message. Defaulted to the UPN of
        /// the logged in user is this is not provided. </param>
        public AddCommunication(string subject, string body, string sender = default(string))
        {
            Sender = sender;
            Subject = subject;
            Body = body;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets sender of the message. Defaulted to the UPN of the
        /// logged in user is this is not provided.
        /// </summary>
        [JsonProperty(PropertyName = "sender")]
        public string Sender { get; set; }

        /// <summary>
        /// Gets or sets subject in plain text
        /// </summary>
        [JsonProperty(PropertyName = "subject")]
        public string Subject { get; set; }

        /// <summary>
        /// Gets or sets body in plain text
        /// </summary>
        [JsonProperty(PropertyName = "body")]
        public string Body { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Subject == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Subject");
            }
            if (Body == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Body");
            }
        }
    }
}
