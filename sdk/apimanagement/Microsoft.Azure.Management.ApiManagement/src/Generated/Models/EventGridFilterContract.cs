// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// EventGridFilter's contract details.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class EventGridFilterContract : Resource
    {
        /// <summary>
        /// Initializes a new instance of the EventGridFilterContract class.
        /// </summary>
        public EventGridFilterContract()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EventGridFilterContract class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type for API Management
        /// resource.</param>
        /// <param name="filter">EventGridFilter description.</param>
        /// <param name="subscriberIdentityInfo">subscriber Identity Info of
        /// this eventGridFilter.</param>
        /// <param name="provisioningState">provisioning State of this
        /// eventGridFilter.</param>
        public EventGridFilterContract(string id = default(string), string name = default(string), string type = default(string), EventGridFilterDescription filter = default(EventGridFilterDescription), SubscriberIdentityInfo subscriberIdentityInfo = default(SubscriberIdentityInfo), string provisioningState = default(string))
            : base(id, name, type)
        {
            Filter = filter;
            SubscriberIdentityInfo = subscriberIdentityInfo;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets eventGridFilter description.
        /// </summary>
        [JsonProperty(PropertyName = "properties.filter")]
        public EventGridFilterDescription Filter { get; set; }

        /// <summary>
        /// Gets or sets subscriber Identity Info of this eventGridFilter.
        /// </summary>
        [JsonProperty(PropertyName = "properties.subscriberIdentityInfo")]
        public SubscriberIdentityInfo SubscriberIdentityInfo { get; set; }

        /// <summary>
        /// Gets or sets provisioning State of this eventGridFilter.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

    }
}
