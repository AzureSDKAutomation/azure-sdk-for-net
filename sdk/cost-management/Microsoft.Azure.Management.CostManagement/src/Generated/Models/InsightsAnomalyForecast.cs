// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CostManagement.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The list of expected forecasts.
    /// </summary>
    public partial class InsightsAnomalyForecast
    {
        /// <summary>
        /// Initializes a new instance of the InsightsAnomalyForecast class.
        /// </summary>
        public InsightsAnomalyForecast()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InsightsAnomalyForecast class.
        /// </summary>
        /// <param name="isAnomaly">Flag indicating if this Anomaly or
        /// not.</param>
        /// <param name="expected">Expected value</param>
        /// <param name="actual">Actual value</param>
        /// <param name="delta">Delta value</param>
        public InsightsAnomalyForecast(bool? isAnomaly = default(bool?), double? expected = default(double?), double? actual = default(double?), double? delta = default(double?))
        {
            IsAnomaly = isAnomaly;
            Expected = expected;
            Actual = actual;
            Delta = delta;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets flag indicating if this Anomaly or not.
        /// </summary>
        [JsonProperty(PropertyName = "isAnomaly")]
        public bool? IsAnomaly { get; private set; }

        /// <summary>
        /// Gets expected value
        /// </summary>
        [JsonProperty(PropertyName = "expected")]
        public double? Expected { get; private set; }

        /// <summary>
        /// Gets actual value
        /// </summary>
        [JsonProperty(PropertyName = "actual")]
        public double? Actual { get; private set; }

        /// <summary>
        /// Gets delta value
        /// </summary>
        [JsonProperty(PropertyName = "delta")]
        public double? Delta { get; private set; }

    }
}
