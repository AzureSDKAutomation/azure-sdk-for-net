// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StoragePool.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Response for iSCSI target requests.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class IscsiTarget : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the IscsiTarget class.
        /// </summary>
        public IscsiTarget()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IscsiTarget class.
        /// </summary>
        /// <param name="provisioningState">State of the operation on the
        /// resource. Possible values include: 'Invalid', 'Succeeded',
        /// 'Failed', 'Canceled', 'Pending', 'Creating', 'Updating',
        /// 'Deleting'</param>
        /// <param name="status">Operational status of the iSCSI target.
        /// Possible values include: 'Invalid', 'Unknown', 'Healthy',
        /// 'Unhealthy', 'Updating', 'Running', 'Stopped', 'Stopped
        /// (deallocated)'</param>
        /// <param name="tpgs">List of iSCSI target portal groups. Can have 1
        /// portal group at most.</param>
        /// <param name="targetIqn">iSCSI target IQN (iSCSI Qualified Name);
        /// example: "iqn.2005-03.org.iscsi:server".</param>
        /// <param name="id">Fully qualified resource Id for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. Ex-
        /// Microsoft.Compute/virtualMachines or
        /// Microsoft.Storage/storageAccounts.</param>
        public IscsiTarget(string provisioningState, string status, IList<TargetPortalGroup> tpgs, string targetIqn, string id = default(string), string name = default(string), string type = default(string))
            : base(id, name, type)
        {
            ProvisioningState = provisioningState;
            Status = status;
            Tpgs = tpgs;
            TargetIqn = targetIqn;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets state of the operation on the resource. Possible
        /// values include: 'Invalid', 'Succeeded', 'Failed', 'Canceled',
        /// 'Pending', 'Creating', 'Updating', 'Deleting'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets operational status of the iSCSI target. Possible
        /// values include: 'Invalid', 'Unknown', 'Healthy', 'Unhealthy',
        /// 'Updating', 'Running', 'Stopped', 'Stopped (deallocated)'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets list of iSCSI target portal groups. Can have 1 portal
        /// group at most.
        /// </summary>
        [JsonProperty(PropertyName = "properties.tpgs")]
        public IList<TargetPortalGroup> Tpgs { get; set; }

        /// <summary>
        /// Gets or sets iSCSI target IQN (iSCSI Qualified Name); example:
        /// "iqn.2005-03.org.iscsi:server".
        /// </summary>
        [JsonProperty(PropertyName = "properties.targetIqn")]
        public string TargetIqn { get; set; }

    }
}
