// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Patterns to match.
    /// </summary>
    public partial class FrontDoorUpdateParametersWebApplicationFirewallPolicyLinksItemPatternsItem
    {
        /// <summary>
        /// Initializes a new instance of the
        /// FrontDoorUpdateParametersWebApplicationFirewallPolicyLinksItemPatternsItem
        /// class.
        /// </summary>
        public FrontDoorUpdateParametersWebApplicationFirewallPolicyLinksItemPatternsItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// FrontDoorUpdateParametersWebApplicationFirewallPolicyLinksItemPatternsItem
        /// class.
        /// </summary>
        /// <param name="domains">Domains to match.</param>
        /// <param name="paths">Paths to match.</param>
        public FrontDoorUpdateParametersWebApplicationFirewallPolicyLinksItemPatternsItem(IList<string> domains = default(IList<string>), IList<string> paths = default(IList<string>))
        {
            Domains = domains;
            Paths = paths;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets domains to match.
        /// </summary>
        [JsonProperty(PropertyName = "domains")]
        public IList<string> Domains { get; set; }

        /// <summary>
        /// Gets or sets paths to match.
        /// </summary>
        [JsonProperty(PropertyName = "paths")]
        public IList<string> Paths { get; set; }

    }
}
