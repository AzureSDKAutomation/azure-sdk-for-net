// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describes the a managed rule set definition.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ManagedRuleSetDefinition : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ManagedRuleSetDefinition class.
        /// </summary>
        public ManagedRuleSetDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedRuleSetDefinition class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="location">Resource location.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="provisioningState">Provisioning state of the managed
        /// rule set.</param>
        /// <param name="ruleSetId">Id of the managed rule set.</param>
        /// <param name="ruleSetType">Type of the managed rule set.</param>
        /// <param name="ruleSetVersion">Version of the managed rule set
        /// type.</param>
        /// <param name="features">Feature set applying to the Ruleset.</param>
        /// <param name="supportedRuleActions">Supported actions for the
        /// Rule.</param>
        /// <param name="supportedRuleSetActions">Supported actions for the
        /// entire RuleSet.</param>
        /// <param name="supportedSkus">Map of objects for sku to related
        /// properties like state, etc.</param>
        /// <param name="ruleGroups">Rule groups of the managed rule
        /// set.</param>
        public ManagedRuleSetDefinition(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string provisioningState = default(string), string ruleSetId = default(string), string ruleSetType = default(string), string ruleSetVersion = default(string), Features features = default(Features), IList<string> supportedRuleActions = default(IList<string>), IList<string> supportedRuleSetActions = default(IList<string>), IDictionary<string, RuleSetDataBag> supportedSkus = default(IDictionary<string, RuleSetDataBag>), IList<ManagedRuleGroupDefinition> ruleGroups = default(IList<ManagedRuleGroupDefinition>))
            : base(id, name, type, location, tags)
        {
            ProvisioningState = provisioningState;
            RuleSetId = ruleSetId;
            RuleSetType = ruleSetType;
            RuleSetVersion = ruleSetVersion;
            Features = features;
            SupportedRuleActions = supportedRuleActions;
            SupportedRuleSetActions = supportedRuleSetActions;
            SupportedSkus = supportedSkus;
            RuleGroups = ruleGroups;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets provisioning state of the managed rule set.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets id of the managed rule set.
        /// </summary>
        [JsonProperty(PropertyName = "properties.ruleSetId")]
        public string RuleSetId { get; private set; }

        /// <summary>
        /// Gets type of the managed rule set.
        /// </summary>
        [JsonProperty(PropertyName = "properties.ruleSetType")]
        public string RuleSetType { get; private set; }

        /// <summary>
        /// Gets version of the managed rule set type.
        /// </summary>
        [JsonProperty(PropertyName = "properties.ruleSetVersion")]
        public string RuleSetVersion { get; private set; }

        /// <summary>
        /// Gets feature set applying to the Ruleset.
        /// </summary>
        [JsonProperty(PropertyName = "properties.features")]
        public Features Features { get; private set; }

        /// <summary>
        /// Gets supported actions for the Rule.
        /// </summary>
        [JsonProperty(PropertyName = "properties.supportedRuleActions")]
        public IList<string> SupportedRuleActions { get; private set; }

        /// <summary>
        /// Gets supported actions for the entire RuleSet.
        /// </summary>
        [JsonProperty(PropertyName = "properties.supportedRuleSetActions")]
        public IList<string> SupportedRuleSetActions { get; private set; }

        /// <summary>
        /// Gets or sets map of objects for sku to related properties like
        /// state, etc.
        /// </summary>
        [JsonProperty(PropertyName = "properties.supportedSkus")]
        public IDictionary<string, RuleSetDataBag> SupportedSkus { get; set; }

        /// <summary>
        /// Gets rule groups of the managed rule set.
        /// </summary>
        [JsonProperty(PropertyName = "properties.ruleGroups")]
        public IList<ManagedRuleGroupDefinition> RuleGroups { get; private set; }

    }
}
