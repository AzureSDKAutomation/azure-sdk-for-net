// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BotService.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A Phone Number with acs Details
    /// </summary>
    public partial class TelephonyChannelResourcePhoneNumber
    {
        /// <summary>
        /// Initializes a new instance of the
        /// TelephonyChannelResourcePhoneNumber class.
        /// </summary>
        public TelephonyChannelResourcePhoneNumber()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// TelephonyChannelResourcePhoneNumber class.
        /// </summary>
        /// <param name="phoneNumber">phoneNumber e.g. +1657207450</param>
        /// <param name="acsEndpoint">acsEndPoint</param>
        /// <param name="acsSecret">acsSecret</param>
        /// <param name="acsResourceId">fully qualified ACS resource id e.g.
        /// /subscriptions/&lt;subId&gt;/resourceGroups/&lt;resGroupId&gt;/providers/Microsoft.Communication/CommunicationServices/&lt;acsResId&gt;</param>
        /// <param
        /// name="cognitiveServiceSubscriptionKey">cognitiveServiceSubscriptionKey</param>
        /// <param name="cognitiveServiceRegion">cognitiveServiceRegion</param>
        /// <param name="defaultLocale">defaultLocale - optional</param>
        public TelephonyChannelResourcePhoneNumber(string phoneNumber, string acsEndpoint, string acsSecret, string acsResourceId, string cognitiveServiceSubscriptionKey, string cognitiveServiceRegion, string defaultLocale = default(string))
        {
            PhoneNumber = phoneNumber;
            AcsEndpoint = acsEndpoint;
            AcsSecret = acsSecret;
            AcsResourceId = acsResourceId;
            CognitiveServiceSubscriptionKey = cognitiveServiceSubscriptionKey;
            CognitiveServiceRegion = cognitiveServiceRegion;
            DefaultLocale = defaultLocale;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets phoneNumber e.g. +1657207450
        /// </summary>
        [JsonProperty(PropertyName = "phoneNumber")]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Gets or sets acsEndPoint
        /// </summary>
        [JsonProperty(PropertyName = "acsEndpoint")]
        public string AcsEndpoint { get; set; }

        /// <summary>
        /// Gets or sets acsSecret
        /// </summary>
        [JsonProperty(PropertyName = "acsSecret")]
        public string AcsSecret { get; set; }

        /// <summary>
        /// Gets or sets fully qualified ACS resource id e.g.
        /// /subscriptions/&amp;lt;subId&amp;gt;/resourceGroups/&amp;lt;resGroupId&amp;gt;/providers/Microsoft.Communication/CommunicationServices/&amp;lt;acsResId&amp;gt;
        /// </summary>
        [JsonProperty(PropertyName = "acsResourceId")]
        public string AcsResourceId { get; set; }

        /// <summary>
        /// Gets or sets cognitiveServiceSubscriptionKey
        /// </summary>
        [JsonProperty(PropertyName = "cognitiveServiceSubscriptionKey")]
        public string CognitiveServiceSubscriptionKey { get; set; }

        /// <summary>
        /// Gets or sets cognitiveServiceRegion
        /// </summary>
        [JsonProperty(PropertyName = "cognitiveServiceRegion")]
        public string CognitiveServiceRegion { get; set; }

        /// <summary>
        /// Gets or sets defaultLocale - optional
        /// </summary>
        [JsonProperty(PropertyName = "defaultLocale")]
        public string DefaultLocale { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PhoneNumber == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PhoneNumber");
            }
            if (AcsEndpoint == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AcsEndpoint");
            }
            if (AcsSecret == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AcsSecret");
            }
            if (AcsResourceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AcsResourceId");
            }
            if (CognitiveServiceSubscriptionKey == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CognitiveServiceSubscriptionKey");
            }
            if (CognitiveServiceRegion == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CognitiveServiceRegion");
            }
        }
    }
}
