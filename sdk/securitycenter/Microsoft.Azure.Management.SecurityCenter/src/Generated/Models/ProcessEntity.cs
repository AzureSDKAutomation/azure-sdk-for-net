// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents a process running on a host
    /// </summary>
    [Newtonsoft.Json.JsonObject("process")]
    public partial class ProcessEntity : AlertEntity
    {
        /// <summary>
        /// Initializes a new instance of the ProcessEntity class.
        /// </summary>
        public ProcessEntity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProcessEntity class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="processId">The process ID</param>
        /// <param name="commandLine">The command line used to create the
        /// process</param>
        /// <param name="elevationToken">The elevation token associated with
        /// the process</param>
        /// <param name="creationTimeUtc">The time when the process started to
        /// run</param>
        public ProcessEntity(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string processId = default(string), string commandLine = default(string), string elevationToken = default(string), string creationTimeUtc = default(string), FileEntity imageFile = default(FileEntity), AccountEntity account = default(AccountEntity), HostLogonSessionEntity logonSession = default(HostLogonSessionEntity), ProcessEntity parentProcess = default(ProcessEntity), HostEntity host = default(HostEntity))
            : base(additionalProperties)
        {
            ProcessId = processId;
            CommandLine = commandLine;
            ElevationToken = elevationToken;
            CreationTimeUtc = creationTimeUtc;
            ImageFile = imageFile;
            Account = account;
            LogonSession = logonSession;
            ParentProcess = parentProcess;
            Host = host;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the process ID
        /// </summary>
        [JsonProperty(PropertyName = "processId")]
        public string ProcessId { get; set; }

        /// <summary>
        /// Gets or sets the command line used to create the process
        /// </summary>
        [JsonProperty(PropertyName = "commandLine")]
        public string CommandLine { get; set; }

        /// <summary>
        /// Gets or sets the elevation token associated with the process
        /// </summary>
        [JsonProperty(PropertyName = "elevationToken")]
        public string ElevationToken { get; set; }

        /// <summary>
        /// Gets or sets the time when the process started to run
        /// </summary>
        [JsonProperty(PropertyName = "creationTimeUtc")]
        public string CreationTimeUtc { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "imageFile")]
        public FileEntity ImageFile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account")]
        public AccountEntity Account { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "logonSession")]
        public HostLogonSessionEntity LogonSession { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentProcess")]
        public ProcessEntity ParentProcess { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "host")]
        public HostEntity Host { get; set; }

    }
}
