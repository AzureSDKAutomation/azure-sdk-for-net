// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents a host that is reported as part of the alert.
    /// </summary>
    [Newtonsoft.Json.JsonObject("host")]
    public partial class HostEntity : AlertEntity
    {
        /// <summary>
        /// Initializes a new instance of the HostEntity class.
        /// </summary>
        public HostEntity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HostEntity class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="dnsDomain">The DNS domain to which this computer
        /// belongs.</param>
        /// <param name="ntDomain">The NT domain to which this computer
        /// belongs.</param>
        /// <param name="hostName">The NT domain to which this computer
        /// belongs.</param>
        /// <param name="netBiosName">The computer name
        /// (pre-windows2000).</param>
        /// <param name="azureID">The Azure resource ID of the VM, if
        /// known.</param>
        /// <param name="omsAgentID">The OMS agent ID, if the computer has OMS
        /// agent installed.</param>
        /// <param name="osFamily">The computer operating system.</param>
        /// <param name="osVersion">The computer operating system specific
        /// version. This is a free form textual representation of the
        /// OS.</param>
        public HostEntity(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string dnsDomain = default(string), string ntDomain = default(string), string hostName = default(string), string netBiosName = default(string), string azureID = default(string), string omsAgentID = default(string), string osFamily = default(string), string osVersion = default(string), IoTDeviceEntity iotDevice = default(IoTDeviceEntity))
            : base(additionalProperties)
        {
            DnsDomain = dnsDomain;
            NtDomain = ntDomain;
            HostName = hostName;
            NetBiosName = netBiosName;
            AzureID = azureID;
            OmsAgentID = omsAgentID;
            OsFamily = osFamily;
            OsVersion = osVersion;
            IotDevice = iotDevice;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the DNS domain to which this computer belongs.
        /// </summary>
        [JsonProperty(PropertyName = "dnsDomain")]
        public string DnsDomain { get; set; }

        /// <summary>
        /// Gets or sets the NT domain to which this computer belongs.
        /// </summary>
        [JsonProperty(PropertyName = "ntDomain")]
        public string NtDomain { get; set; }

        /// <summary>
        /// Gets or sets the NT domain to which this computer belongs.
        /// </summary>
        [JsonProperty(PropertyName = "hostName")]
        public string HostName { get; set; }

        /// <summary>
        /// Gets or sets the computer name (pre-windows2000).
        /// </summary>
        [JsonProperty(PropertyName = "netBiosName")]
        public string NetBiosName { get; set; }

        /// <summary>
        /// Gets or sets the Azure resource ID of the VM, if known.
        /// </summary>
        [JsonProperty(PropertyName = "azureID")]
        public string AzureID { get; set; }

        /// <summary>
        /// Gets or sets the OMS agent ID, if the computer has OMS agent
        /// installed.
        /// </summary>
        [JsonProperty(PropertyName = "omsAgentID")]
        public string OmsAgentID { get; set; }

        /// <summary>
        /// Gets or sets the computer operating system.
        /// </summary>
        [JsonProperty(PropertyName = "osFamily")]
        public string OsFamily { get; set; }

        /// <summary>
        /// Gets or sets the computer operating system specific version. This
        /// is a free form textual representation of the OS.
        /// </summary>
        [JsonProperty(PropertyName = "osVersion")]
        public string OsVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "iotDevice")]
        public IoTDeviceEntity IotDevice { get; set; }

    }
}
