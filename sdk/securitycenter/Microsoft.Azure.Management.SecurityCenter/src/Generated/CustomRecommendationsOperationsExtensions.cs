// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for CustomRecommendationsOperations.
    /// </summary>
    public static partial class CustomRecommendationsOperationsExtensions
    {
            /// <summary>
            /// Get a single custom recommendation by name for the provided subscriptionId.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='customRecommendationName'>
            /// Name of the customRecommendation object
            /// </param>
            public static CustomRecommendation Get(this ICustomRecommendationsOperations operations, string customRecommendationName)
            {
                return operations.GetAsync(customRecommendationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a single custom recommendation by name for the provided subscriptionId.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='customRecommendationName'>
            /// Name of the customRecommendation object
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CustomRecommendation> GetAsync(this ICustomRecommendationsOperations operations, string customRecommendationName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(customRecommendationName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update a custom recommendation for the provided subscription.
            /// Please note that providing an existing customRecommendationName will
            /// update/replace an existing record.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='customRecommendationName'>
            /// Name of the customRecommendation object
            /// </param>
            /// <param name='customRecommendationBody'>
            /// Custom recommendation body
            /// </param>
            public static CustomRecommendation Put(this ICustomRecommendationsOperations operations, string customRecommendationName, CustomRecommendationProperties customRecommendationBody)
            {
                return operations.PutAsync(customRecommendationName, customRecommendationBody).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update a custom recommendation for the provided subscription.
            /// Please note that providing an existing customRecommendationName will
            /// update/replace an existing record.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='customRecommendationName'>
            /// Name of the customRecommendation object
            /// </param>
            /// <param name='customRecommendationBody'>
            /// Custom recommendation body
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CustomRecommendation> PutAsync(this ICustomRecommendationsOperations operations, string customRecommendationName, CustomRecommendationProperties customRecommendationBody, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PutWithHttpMessagesAsync(customRecommendationName, customRecommendationBody, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a custom recommendation by name for a provided subscriptionId
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='customRecommendationName'>
            /// Name of the customRecommendation object
            /// </param>
            public static void Delete(this ICustomRecommendationsOperations operations, string customRecommendationName)
            {
                operations.DeleteAsync(customRecommendationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a custom recommendation by name for a provided subscriptionId
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='customRecommendationName'>
            /// Name of the customRecommendation object
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this ICustomRecommendationsOperations operations, string customRecommendationName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(customRecommendationName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static CustomRecommendationList List(this ICustomRecommendationsOperations operations)
            {
                return operations.ListAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CustomRecommendationList> ListAsync(this ICustomRecommendationsOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
