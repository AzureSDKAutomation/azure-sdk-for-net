// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents a VM Pool.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class VmPool : Resource
    {
        /// <summary>
        /// Initializes a new instance of the VmPool class.
        /// </summary>
        public VmPool()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VmPool class.
        /// </summary>
        /// <param name="id">The identifier of the resource.</param>
        /// <param name="name">The name of the resource.</param>
        /// <param name="type">The type of the resource.</param>
        /// <param name="location">The location of the resource.</param>
        /// <param name="tags">The tags of the resource.</param>
        /// <param name="vmScalesetComputeId">The resource identifier
        /// (Microsoft.Compute) of the virtual machine scale set</param>
        /// <param name="userName">The user name of the virtual machines in the
        /// vitual machine scale set</param>
        /// <param name="password">The administrator password of the virtual
        /// machines in the virtual machine scale set</param>
        /// <param name="galleryImageReference">The Microsoft Azure Marketplace
        /// image reference of the virtual machines in the scale set</param>
        /// <param name="instanceCount">The number of instances in the virtual
        /// machine scale set</param>
        /// <param name="customImageId">The custom image used as a base for the
        /// virtual machines in the scale set</param>
        /// <param name="storageType">Storage account type used with custom
        /// image. Possible values include: 'Standard', 'Premium',
        /// 'StandardSSD'</param>
        /// <param name="size">The size of the virtual machines in the scale
        /// set</param>
        /// <param name="labSubnetName">The lab subnet name of the virtual
        /// machines in the scale set</param>
        /// <param name="labVirtualNetworkId">The lab virtual network
        /// identifier of the virtual machines in the scale set</param>
        /// <param name="provisioningState">The provisioning status of the
        /// resource.</param>
        /// <param name="uniqueIdentifier">The unique immutable identifier of a
        /// resource (Guid).</param>
        public VmPool(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string vmScalesetComputeId = default(string), string userName = default(string), string password = default(string), GalleryImageReference galleryImageReference = default(GalleryImageReference), int? instanceCount = default(int?), string customImageId = default(string), string storageType = default(string), string size = default(string), string labSubnetName = default(string), string labVirtualNetworkId = default(string), string provisioningState = default(string), string uniqueIdentifier = default(string))
            : base(id, name, type, location, tags)
        {
            VmScalesetComputeId = vmScalesetComputeId;
            UserName = userName;
            Password = password;
            GalleryImageReference = galleryImageReference;
            InstanceCount = instanceCount;
            CustomImageId = customImageId;
            StorageType = storageType;
            Size = size;
            LabSubnetName = labSubnetName;
            LabVirtualNetworkId = labVirtualNetworkId;
            ProvisioningState = provisioningState;
            UniqueIdentifier = uniqueIdentifier;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the resource identifier (Microsoft.Compute) of the virtual
        /// machine scale set
        /// </summary>
        [JsonProperty(PropertyName = "properties.vmScalesetComputeId")]
        public string VmScalesetComputeId { get; private set; }

        /// <summary>
        /// Gets or sets the user name of the virtual machines in the vitual
        /// machine scale set
        /// </summary>
        [JsonProperty(PropertyName = "properties.userName")]
        public string UserName { get; set; }

        /// <summary>
        /// Gets or sets the administrator password of the virtual machines in
        /// the virtual machine scale set
        /// </summary>
        [JsonProperty(PropertyName = "properties.password")]
        public string Password { get; set; }

        /// <summary>
        /// Gets or sets the Microsoft Azure Marketplace image reference of the
        /// virtual machines in the scale set
        /// </summary>
        [JsonProperty(PropertyName = "properties.galleryImageReference")]
        public GalleryImageReference GalleryImageReference { get; set; }

        /// <summary>
        /// Gets or sets the number of instances in the virtual machine scale
        /// set
        /// </summary>
        [JsonProperty(PropertyName = "properties.instanceCount")]
        public int? InstanceCount { get; set; }

        /// <summary>
        /// Gets or sets the custom image used as a base for the virtual
        /// machines in the scale set
        /// </summary>
        [JsonProperty(PropertyName = "properties.customImageId")]
        public string CustomImageId { get; set; }

        /// <summary>
        /// Gets or sets storage account type used with custom image. Possible
        /// values include: 'Standard', 'Premium', 'StandardSSD'
        /// </summary>
        [JsonProperty(PropertyName = "properties.storageType")]
        public string StorageType { get; set; }

        /// <summary>
        /// Gets or sets the size of the virtual machines in the scale set
        /// </summary>
        [JsonProperty(PropertyName = "properties.size")]
        public string Size { get; set; }

        /// <summary>
        /// Gets or sets the lab subnet name of the virtual machines in the
        /// scale set
        /// </summary>
        [JsonProperty(PropertyName = "properties.labSubnetName")]
        public string LabSubnetName { get; set; }

        /// <summary>
        /// Gets or sets the lab virtual network identifier of the virtual
        /// machines in the scale set
        /// </summary>
        [JsonProperty(PropertyName = "properties.labVirtualNetworkId")]
        public string LabVirtualNetworkId { get; set; }

        /// <summary>
        /// Gets the provisioning status of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets the unique immutable identifier of a resource (Guid).
        /// </summary>
        [JsonProperty(PropertyName = "properties.uniqueIdentifier")]
        public string UniqueIdentifier { get; private set; }

    }
}
