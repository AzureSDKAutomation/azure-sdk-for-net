// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HDInsight.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The vm size property
    /// </summary>
    public partial class VmSizeProperty
    {
        /// <summary>
        /// Initializes a new instance of the VmSizeProperty class.
        /// </summary>
        public VmSizeProperty()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VmSizeProperty class.
        /// </summary>
        /// <param name="name">The vm size name</param>
        /// <param name="cores">The number of cores that the vm size
        /// has.</param>
        /// <param name="dataDiskStorageTier">The data disk storage tier of the
        /// vm size.</param>
        /// <param name="label">The label of the vm size.</param>
        /// <param name="maxDataDiskCount">The max data disk count of the vm
        /// size.</param>
        /// <param name="memoryInMb">The memory whose unit is MB of the vm
        /// size.</param>
        /// <param name="supportedByVirtualMachines">This indicates this vm
        /// size is supported by virtual machines or not</param>
        /// <param name="supportedByWebWorkerRoles">The indicates this vm size
        /// is supported by web worker roles or not</param>
        /// <param name="virtualMachineResourceDiskSizeInMb">The virtual
        /// machine resource disk size whose unit is MB of the vm size.</param>
        /// <param name="webWorkerResourceDiskSizeInMb">The web worker resource
        /// disk size whose unit is MB of the vm size.</param>
        public VmSizeProperty(string name = default(string), string cores = default(string), string dataDiskStorageTier = default(string), string label = default(string), string maxDataDiskCount = default(string), string memoryInMb = default(string), string supportedByVirtualMachines = default(string), string supportedByWebWorkerRoles = default(string), string virtualMachineResourceDiskSizeInMb = default(string), string webWorkerResourceDiskSizeInMb = default(string))
        {
            Name = name;
            Cores = cores;
            DataDiskStorageTier = dataDiskStorageTier;
            Label = label;
            MaxDataDiskCount = maxDataDiskCount;
            MemoryInMb = memoryInMb;
            SupportedByVirtualMachines = supportedByVirtualMachines;
            SupportedByWebWorkerRoles = supportedByWebWorkerRoles;
            VirtualMachineResourceDiskSizeInMb = virtualMachineResourceDiskSizeInMb;
            WebWorkerResourceDiskSizeInMb = webWorkerResourceDiskSizeInMb;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the vm size name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the number of cores that the vm size has.
        /// </summary>
        [JsonProperty(PropertyName = "cores")]
        public string Cores { get; set; }

        /// <summary>
        /// Gets or sets the data disk storage tier of the vm size.
        /// </summary>
        [JsonProperty(PropertyName = "dataDiskStorageTier")]
        public string DataDiskStorageTier { get; set; }

        /// <summary>
        /// Gets or sets the label of the vm size.
        /// </summary>
        [JsonProperty(PropertyName = "label")]
        public string Label { get; set; }

        /// <summary>
        /// Gets or sets the max data disk count of the vm size.
        /// </summary>
        [JsonProperty(PropertyName = "maxDataDiskCount")]
        public string MaxDataDiskCount { get; set; }

        /// <summary>
        /// Gets or sets the memory whose unit is MB of the vm size.
        /// </summary>
        [JsonProperty(PropertyName = "memoryInMb")]
        public string MemoryInMb { get; set; }

        /// <summary>
        /// Gets or sets this indicates this vm size is supported by virtual
        /// machines or not
        /// </summary>
        [JsonProperty(PropertyName = "supportedByVirtualMachines")]
        public string SupportedByVirtualMachines { get; set; }

        /// <summary>
        /// Gets or sets the indicates this vm size is supported by web worker
        /// roles or not
        /// </summary>
        [JsonProperty(PropertyName = "supportedByWebWorkerRoles")]
        public string SupportedByWebWorkerRoles { get; set; }

        /// <summary>
        /// Gets or sets the virtual machine resource disk size whose unit is
        /// MB of the vm size.
        /// </summary>
        [JsonProperty(PropertyName = "virtualMachineResourceDiskSizeInMb")]
        public string VirtualMachineResourceDiskSizeInMb { get; set; }

        /// <summary>
        /// Gets or sets the web worker resource disk size whose unit is MB of
        /// the vm size.
        /// </summary>
        [JsonProperty(PropertyName = "webWorkerResourceDiskSizeInMb")]
        public string WebWorkerResourceDiskSizeInMb { get; set; }

    }
}
