// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Attestation.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The result of a policy certificate modification
    /// </summary>
    public partial class PolicyCertificatesModificationResult
    {
        /// <summary>
        /// Initializes a new instance of the
        /// PolicyCertificatesModificationResult class.
        /// </summary>
        public PolicyCertificatesModificationResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// PolicyCertificatesModificationResult class.
        /// </summary>
        /// <param name="certificateThumbprint">Hex encoded SHA1 Hash of the
        /// binary representation certificate which was added or
        /// removed</param>
        /// <param name="certificateResolution">The result of the operation.
        /// Possible values include: 'IsPresent', 'IsAbsent'</param>
        public PolicyCertificatesModificationResult(string certificateThumbprint = default(string), string certificateResolution = default(string))
        {
            CertificateThumbprint = certificateThumbprint;
            CertificateResolution = certificateResolution;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets hex encoded SHA1 Hash of the binary representation
        /// certificate which was added or removed
        /// </summary>
        [JsonProperty(PropertyName = "x-ms-certificate-thumbprint")]
        public string CertificateThumbprint { get; set; }

        /// <summary>
        /// Gets or sets the result of the operation. Possible values include:
        /// 'IsPresent', 'IsAbsent'
        /// </summary>
        [JsonProperty(PropertyName = "x-ms-policycertificates-result")]
        public string CertificateResolution { get; set; }

    }
}
