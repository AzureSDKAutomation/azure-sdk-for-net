// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Attestation.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines the "initialization time data" used to provision the
    /// attestation target for use by the MAA
    /// </summary>
    public partial class InitTimeData
    {
        /// <summary>
        /// Initializes a new instance of the InitTimeData class.
        /// </summary>
        public InitTimeData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InitTimeData class.
        /// </summary>
        /// <param name="data">UTF-8 encoded Initialization Data passed into
        /// the trusted environment when it is created.</param>
        /// <param name="dataType">The type of data contained within the "data"
        /// field. Possible values include: 'Binary', 'JSON'</param>
        public InitTimeData(byte[] data = default(byte[]), string dataType = default(string))
        {
            Data = data;
            DataType = dataType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets UTF-8 encoded Initialization Data passed into the
        /// trusted environment when it is created.
        /// </summary>
        [JsonConverter(typeof(Base64UrlJsonConverter))]
        [JsonProperty(PropertyName = "data")]
        public byte[] Data { get; set; }

        /// <summary>
        /// Gets or sets the type of data contained within the "data" field.
        /// Possible values include: 'Binary', 'JSON'
        /// </summary>
        [JsonProperty(PropertyName = "dataType")]
        public string DataType { get; set; }

    }
}
