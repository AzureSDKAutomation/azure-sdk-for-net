// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Attestation.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The result of a policy certificate modification
    /// </summary>
    public partial class PolicyResult
    {
        /// <summary>
        /// Initializes a new instance of the PolicyResult class.
        /// </summary>
        public PolicyResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PolicyResult class.
        /// </summary>
        /// <param name="policyResolution">The result of the operation.
        /// Possible values include: 'Updated', 'Removed'</param>
        /// <param name="policyTokenHash">The SHA256 hash of the policy object
        /// modified</param>
        /// <param name="policySigner">The certificate used to sign the policy
        /// object, if specified</param>
        /// <param name="policy">A JSON Web Token containing a
        /// StoredAttestationPolicy object with the attestation policy</param>
        public PolicyResult(string policyResolution = default(string), byte[] policyTokenHash = default(byte[]), JSONWebKey policySigner = default(JSONWebKey), string policy = default(string))
        {
            PolicyResolution = policyResolution;
            PolicyTokenHash = policyTokenHash;
            PolicySigner = policySigner;
            Policy = policy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the result of the operation. Possible values include:
        /// 'Updated', 'Removed'
        /// </summary>
        [JsonProperty(PropertyName = "x-ms-policy-result")]
        public string PolicyResolution { get; set; }

        /// <summary>
        /// Gets or sets the SHA256 hash of the policy object modified
        /// </summary>
        [JsonConverter(typeof(Base64UrlJsonConverter))]
        [JsonProperty(PropertyName = "x-ms-policy-token-hash")]
        public byte[] PolicyTokenHash { get; set; }

        /// <summary>
        /// Gets or sets the certificate used to sign the policy object, if
        /// specified
        /// </summary>
        [JsonProperty(PropertyName = "x-ms-policy-signer")]
        public JSONWebKey PolicySigner { get; set; }

        /// <summary>
        /// Gets or sets a JSON Web Token containing a StoredAttestationPolicy
        /// object with the attestation policy
        /// </summary>
        [JsonProperty(PropertyName = "x-ms-policy")]
        public string Policy { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PolicySigner != null)
            {
                PolicySigner.Validate();
            }
        }
    }
}
