// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerService.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Extension add-on.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ExtensionAddon : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the ExtensionAddon class.
        /// </summary>
        public ExtensionAddon()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExtensionAddon class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">The name of the resource that is unique within a
        /// resource group. This name can be used to access the
        /// resource.</param>
        /// <param name="type">Resource type</param>
        /// <param name="systemData">The system metadata related to this
        /// resource.</param>
        /// <param name="provisioningState">The current provisioning state of
        /// extension add-on. Possible values include: 'Creating', 'Updating',
        /// 'Deleting', 'Failed', 'Succeeded'</param>
        /// <param name="addonName">Corresponding name if the add-on is also
        /// embedded in AKS.</param>
        /// <param name="enableManagedIdentity">Whether managed identity is
        /// required for the extension add-on or not.</param>
        /// <param name="identity">Information of user assigned identity used
        /// by this add-on.</param>
        public ExtensionAddon(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string provisioningState = default(string), string addonName = default(string), bool? enableManagedIdentity = default(bool?), ExtensionAddonPropertiesIdentity identity = default(ExtensionAddonPropertiesIdentity))
            : base(id, name, type)
        {
            SystemData = systemData;
            ProvisioningState = provisioningState;
            AddonName = addonName;
            EnableManagedIdentity = enableManagedIdentity;
            Identity = identity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the system metadata related to this resource.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

        /// <summary>
        /// Gets the current provisioning state of extension add-on. Possible
        /// values include: 'Creating', 'Updating', 'Deleting', 'Failed',
        /// 'Succeeded'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets corresponding name if the add-on is also embedded in
        /// AKS.
        /// </summary>
        [JsonProperty(PropertyName = "properties.addonName")]
        public string AddonName { get; set; }

        /// <summary>
        /// Gets or sets whether managed identity is required for the extension
        /// add-on or not.
        /// </summary>
        [JsonProperty(PropertyName = "properties.enableManagedIdentity")]
        public bool? EnableManagedIdentity { get; set; }

        /// <summary>
        /// Gets information of user assigned identity used by this add-on.
        /// </summary>
        [JsonProperty(PropertyName = "properties.identity")]
        public ExtensionAddonPropertiesIdentity Identity { get; private set; }

    }
}
