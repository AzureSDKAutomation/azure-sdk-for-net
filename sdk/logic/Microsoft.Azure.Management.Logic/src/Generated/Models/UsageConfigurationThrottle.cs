// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Logic.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The usage configuration throttle.
    /// </summary>
    public partial class UsageConfigurationThrottle
    {
        /// <summary>
        /// Initializes a new instance of the UsageConfigurationThrottle class.
        /// </summary>
        public UsageConfigurationThrottle()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UsageConfigurationThrottle class.
        /// </summary>
        /// <param name="threshold">The number of operations to throttle
        /// at.</param>
        /// <param name="period">The usage configuration throttle
        /// period</param>
        /// <param name="triggerStatuses">The trigger statuses to
        /// throttle</param>
        /// <param name="actionStatuses">The action statuses to
        /// throttle</param>
        public UsageConfigurationThrottle(double? threshold = default(double?), UsageConfigurationThrottlePeriod period = default(UsageConfigurationThrottlePeriod), IList<string> triggerStatuses = default(IList<string>), IList<string> actionStatuses = default(IList<string>))
        {
            Threshold = threshold;
            Period = period;
            TriggerStatuses = triggerStatuses;
            ActionStatuses = actionStatuses;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the number of operations to throttle at.
        /// </summary>
        [JsonProperty(PropertyName = "threshold")]
        public double? Threshold { get; set; }

        /// <summary>
        /// Gets or sets the usage configuration throttle period
        /// </summary>
        [JsonProperty(PropertyName = "period")]
        public UsageConfigurationThrottlePeriod Period { get; set; }

        /// <summary>
        /// Gets or sets the trigger statuses to throttle
        /// </summary>
        [JsonProperty(PropertyName = "triggerStatuses")]
        public IList<string> TriggerStatuses { get; set; }

        /// <summary>
        /// Gets or sets the action statuses to throttle
        /// </summary>
        [JsonProperty(PropertyName = "actionStatuses")]
        public IList<string> ActionStatuses { get; set; }

    }
}
