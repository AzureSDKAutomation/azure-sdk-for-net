// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Logic.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The integration account usage configuration.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class IntegrationAccountUsageConfiguration : Resource
    {
        /// <summary>
        /// Initializes a new instance of the
        /// IntegrationAccountUsageConfiguration class.
        /// </summary>
        public IntegrationAccountUsageConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// IntegrationAccountUsageConfiguration class.
        /// </summary>
        /// <param name="id">The resource id.</param>
        /// <param name="name">Gets the resource name.</param>
        /// <param name="type">Gets the resource type.</param>
        /// <param name="location">The resource location.</param>
        /// <param name="tags">The resource tags.</param>
        /// <param name="disableOverride">Whether to disable runtime override
        /// of the usage configuration.</param>
        /// <param name="throttles">The usage configuration throttles.</param>
        /// <param name="createdTime">The created time.</param>
        /// <param name="changedTime">The changed time.</param>
        /// <param name="metadata">The metadata.</param>
        public IntegrationAccountUsageConfiguration(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), bool? disableOverride = default(bool?), IDictionary<string, UsageConfigurationThrottle> throttles = default(IDictionary<string, UsageConfigurationThrottle>), System.DateTime? createdTime = default(System.DateTime?), System.DateTime? changedTime = default(System.DateTime?), object metadata = default(object))
            : base(id, name, type, location, tags)
        {
            DisableOverride = disableOverride;
            Throttles = throttles;
            CreatedTime = createdTime;
            ChangedTime = changedTime;
            Metadata = metadata;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets whether to disable runtime override of the usage
        /// configuration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.disableOverride")]
        public bool? DisableOverride { get; set; }

        /// <summary>
        /// Gets or sets the usage configuration throttles.
        /// </summary>
        [JsonProperty(PropertyName = "properties.throttles")]
        public IDictionary<string, UsageConfigurationThrottle> Throttles { get; set; }

        /// <summary>
        /// Gets the created time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdTime")]
        public System.DateTime? CreatedTime { get; private set; }

        /// <summary>
        /// Gets the changed time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.changedTime")]
        public System.DateTime? ChangedTime { get; private set; }

        /// <summary>
        /// Gets or sets the metadata.
        /// </summary>
        [JsonProperty(PropertyName = "properties.metadata")]
        public object Metadata { get; set; }

    }
}
