// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StreamAnalytics.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for JobState.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum JobState
    {
        /// <summary>
        /// The job is currently in the Created state.
        /// </summary>
        [EnumMember(Value = "Created")]
        Created,
        /// <summary>
        /// The job is currently in the Starting state.
        /// </summary>
        [EnumMember(Value = "Starting")]
        Starting,
        /// <summary>
        /// The job is currently in the Running state.
        /// </summary>
        [EnumMember(Value = "Running")]
        Running,
        /// <summary>
        /// The job is currently in the Stopping state.
        /// </summary>
        [EnumMember(Value = "Stopping")]
        Stopping,
        /// <summary>
        /// The job is currently in the Stopped state.
        /// </summary>
        [EnumMember(Value = "Stopped")]
        Stopped,
        /// <summary>
        /// The job is currently in the Deleting state.
        /// </summary>
        [EnumMember(Value = "Deleting")]
        Deleting,
        /// <summary>
        /// The job is currently in the Failed state.
        /// </summary>
        [EnumMember(Value = "Failed")]
        Failed,
        /// <summary>
        /// The job is currently in the Degraded state.
        /// </summary>
        [EnumMember(Value = "Degraded")]
        Degraded,
        /// <summary>
        /// The job is currently in the Restarting state.
        /// </summary>
        [EnumMember(Value = "Restarting")]
        Restarting,
        /// <summary>
        /// The job is currently in the Scaling state.
        /// </summary>
        [EnumMember(Value = "Scaling")]
        Scaling
    }
    internal static class JobStateEnumExtension
    {
        internal static string ToSerializedValue(this JobState? value)
        {
            return value == null ? null : ((JobState)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this JobState value)
        {
            switch( value )
            {
                case JobState.Created:
                    return "Created";
                case JobState.Starting:
                    return "Starting";
                case JobState.Running:
                    return "Running";
                case JobState.Stopping:
                    return "Stopping";
                case JobState.Stopped:
                    return "Stopped";
                case JobState.Deleting:
                    return "Deleting";
                case JobState.Failed:
                    return "Failed";
                case JobState.Degraded:
                    return "Degraded";
                case JobState.Restarting:
                    return "Restarting";
                case JobState.Scaling:
                    return "Scaling";
            }
            return null;
        }

        internal static JobState? ParseJobState(this string value)
        {
            switch( value )
            {
                case "Created":
                    return JobState.Created;
                case "Starting":
                    return JobState.Starting;
                case "Running":
                    return JobState.Running;
                case "Stopping":
                    return JobState.Stopping;
                case "Stopped":
                    return JobState.Stopped;
                case "Deleting":
                    return JobState.Deleting;
                case "Failed":
                    return JobState.Failed;
                case "Degraded":
                    return JobState.Degraded;
                case "Restarting":
                    return JobState.Restarting;
                case "Scaling":
                    return JobState.Scaling;
            }
            return null;
        }
    }
}
