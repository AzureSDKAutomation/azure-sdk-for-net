// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StreamAnalytics.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The result of the query testing request.
    /// </summary>
    public partial class QueryTestingResult : Error
    {
        /// <summary>
        /// Initializes a new instance of the QueryTestingResult class.
        /// </summary>
        public QueryTestingResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the QueryTestingResult class.
        /// </summary>
        /// <param name="errorProperty">Error definition properties.</param>
        /// <param name="status">The status of the query testing request.
        /// Possible values include: 'Started', 'Success', 'CompilerError',
        /// 'RuntimeError', 'Timeout', 'UnknownError'</param>
        /// <param name="outputUri">The SAS URL to the outputs payload.</param>
        public QueryTestingResult(ErrorError errorProperty = default(ErrorError), string status = default(string), string outputUri = default(string))
            : base(errorProperty)
        {
            Status = status;
            OutputUri = outputUri;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the status of the query testing request. Possible
        /// values include: 'Started', 'Success', 'CompilerError',
        /// 'RuntimeError', 'Timeout', 'UnknownError'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets the SAS URL to the outputs payload.
        /// </summary>
        [JsonProperty(PropertyName = "outputUri")]
        public string OutputUri { get; private set; }

    }
}
