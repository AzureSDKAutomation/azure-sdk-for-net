// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AppPlatform.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// VNET injection properties payload
    /// </summary>
    public partial class VNetProperties
    {
        /// <summary>
        /// Initializes a new instance of the VNetProperties class.
        /// </summary>
        public VNetProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VNetProperties class.
        /// </summary>
        /// <param name="vNetResourceId">ResourceId of the Azure VNet
        /// resource</param>
        /// <param name="systemSubnetName">Name of the system cluster
        /// subnet</param>
        /// <param name="userSubnetName">Name of the user cluster
        /// subnet</param>
        /// <param name="enabled">Indicates whether VNET injection is
        /// enabled</param>
        public VNetProperties(string vNetResourceId = default(string), string systemSubnetName = default(string), string userSubnetName = default(string), bool? enabled = default(bool?))
        {
            VNetResourceId = vNetResourceId;
            SystemSubnetName = systemSubnetName;
            UserSubnetName = userSubnetName;
            Enabled = enabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets resourceId of the Azure VNet resource
        /// </summary>
        [JsonProperty(PropertyName = "vNetResourceId")]
        public string VNetResourceId { get; private set; }

        /// <summary>
        /// Gets name of the system cluster subnet
        /// </summary>
        [JsonProperty(PropertyName = "systemSubnetName")]
        public string SystemSubnetName { get; private set; }

        /// <summary>
        /// Gets name of the user cluster subnet
        /// </summary>
        [JsonProperty(PropertyName = "userSubnetName")]
        public string UserSubnetName { get; private set; }

        /// <summary>
        /// Gets indicates whether VNET injection is enabled
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool? Enabled { get; private set; }

    }
}
